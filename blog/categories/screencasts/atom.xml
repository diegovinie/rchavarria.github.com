<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: screencasts | R. Chavarria's Blog]]></title>
  <link href="http://rchavarria.github.io/blog/categories/screencasts/atom.xml" rel="self"/>
  <link href="http://rchavarria.github.io/"/>
  <updated>2015-06-28T23:53:12+02:00</updated>
  <id>http://rchavarria.github.io/</id>
  <author>
    <name><![CDATA[Rub&eacute;n Chavarr&iacute;a]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Screencast de programacion: el Juego del disparejo]]></title>
    <link href="http://rchavarria.github.io/blog/2014/10/23/screencast-programacion-juego-disparejo/"/>
    <updated>2014-10-23T00:12:00+02:00</updated>
    <id>http://rchavarria.github.io/blog/2014/10/23/screencast-programacion-juego-disparejo</id>
    <content type="html"><![CDATA[<p>En este post te presento un screencast que he creado mostrándote cómo resuelvo
un problema de programación. Todo empezó viendo los
<a href="http://www.carlosble.com/screencasts/es/">Screencasts de programación de Carlos Blé</a>.
Deberías echarles un vistazo, merecen la pena, en serio.</p>

<p>Me gustaron tanto que me pregunté si podría crear yo algunos. Por aquel tiempo
estaba trasteando con un problema de solveet.com, el <a href="http://www.solveet.com/exercises/Juego-del-disparejo/306">Juego del disparejo</a>.
Así que tenía todo: el gusanillo de crear algo, y un problema sobre el que
trabajar.</p>

<!-- more -->




<iframe src="http://rchavarria.github.io//player.vimeo.com/video/109688257" 
        width="500"
        height="281"
        frameborder="0"
        webkitallowfullscreen mozallowfullscreen allowfullscreen>
</iframe>


<p>El problema lo resuelvo con el lenguaje de programación <a href="http://dartlang.org/">Dart</a>. No por
nada en particular, si no porque lo estoy aprendiendo, y para ello me
da por resolver problemas de programación (donde solveet.com entra en
juego).</p>

<p>El proceso que sigo es el ciclo TDD: red ➭ green ➭ refactor. Para evolucionar
el código y las refactorizaciones, aplico técnicas aprendidas de <a href="http://www.carlosble.com">Carlos</a> y
sus screencasts, así como las <a href="http://blog.8thlight.com/uncle-bob/2013/05/27/TheTransformationPriorityPremise.html">Transformation Priority Premise</a> del
gran maestro <a href="https://en.wikipedia.org/wiki/Robert_Cecil_Martin">Uncle Bob</a>.</p>
]]></content>
  </entry>
  
</feed>

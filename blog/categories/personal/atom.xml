<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: personal | R. Chavarria's Blog]]></title>
  <link href="http://rchavarria.github.io/blog/categories/personal/atom.xml" rel="self"/>
  <link href="http://rchavarria.github.io/"/>
  <updated>2016-01-13T22:48:55+01:00</updated>
  <id>http://rchavarria.github.io/</id>
  <author>
    <name><![CDATA[Rub&eacute;n Chavarr&iacute;a]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Mi CAS 2015]]></title>
    <link href="http://rchavarria.github.io/blog/2015/12/13/mi-cas-2015/"/>
    <updated>2015-12-13T21:48:00+01:00</updated>
    <id>http://rchavarria.github.io/blog/2015/12/13/mi-cas-2015</id>
    <content type="html"><![CDATA[<p>Me quedé sin chapa. Sin chapa de "Mi primera CAS". Conocí a varias personas que la llevaban orgullosos. Espero que para ellos significara lo mismo que significó para mí <a href="">mi primera CAS</a>.</p>

<p>Ésta, como aquella, ha sido una gran experiencia. La de este año ha sido enooorme, comparada con la de Cáceres. Hemos asistido más de 700 personas. Ha tenido que ser un trabajo monumental organizarla, así que desde aquí mis agradecimientos y admiración a todos los que la han hecho posible: organizadores, patrocinadores y voluntarios. Olé!</p>

<!-- more -->


<p>La conferencia fueron dos intensos días llenos de charlas interesantísimas. Dos días que saben a poco. Sobretodo porque no he podido disfrutar de las cañas de después, o las quedadas fuera del evento. Y también porque, a pesar de que todos los asistentes estuviéramos en la misma sala para tomar café y comer, me ha resultado imposible entablar conversaciones con todas las personas que quería. ¡Agotador! Pero muy motivador a la vez.</p>

<p>Sigamos con las charlas a las que asistí, y qué me llevé de ellas:</p>

<h2><a href="http://www.slideshare.net/carlosble/cas2015-opening-improving-the-software">Apertura</a>, <a href="https://twitter.com/carlosble">Carlos Blé</a></h2>

<p>Carlos habló de la necesidad de hablar inglés, no porque sí, si no para aprender de las fuentes. También habló de la importancia de hablar otro lenguaje, extraño para los desarrolladores, el de negocio. De esta forma nos entenderemos mejor ambas partes. Fue una charla muy inspiradora, fenommenal como apertura. Me quedaría con la frase:</p>

<blockquote><p>Tú eres el único responsable de tu carrera</p></blockquote>

<h2><a href="https://www.youtube.com/watch?v=C6Sy0v19RAc&amp;t=2h14m00s">Your application is not your framework</a>, de <a href="https://twitter.com/ecomba">Enrique Comba</a></h2>

<p>¿Por qué cuando te preguntan por tu applicación dices qué framework estás usando? Habla sobre qué hace de verdad tu aplicación. Enrique habló de muchos conceptos alrededor de los frameworks: <em>convention over configuration</em>, mezcla de lógica de negocio con la lógica impuesta por el framework. ¿Qué beneficios trae separar la lógica de tu aplicación del framework? Separación de responsabilidades, velocidad en los tests automáticos y sobretodo claridad en el <strong>propósito</strong> y <strong>estructura</strong> de tu aplicación.</p>

<h2><a href="http://www.slideshare.net/PeterMarshall10/pete-marshall-casmadrid2015-continuous-delivery-in-legacy-environments">Continuous delivery</a>, de <a href="https://twitter.com/petemar5hall">Peter Marshal</a></h2>

<p>Peter compartió su experiencia en llevar a un equipo desde el desarrollo de una aplicación <em>a la vieja usanza</em> hasta alcanzar puestas en producción diarias. En las slides de la presentación encontrarás multitud de consejos para llevarlo a cabo, pero yo me quedaría con estos conceptos o enseñanzas:</p>

<ul>
<li>La entrega contínua es enfocarse en la excelencia técnica</li>
<li>Conforme avanza el tiempo, el mayor problema de las aplicaciones con problemas es que los bugs aumentan mientras que las funcionalidades desplegadas disminuyen.</li>
<li>La clave está en la simplicidad</li>
<li>Lleva su tiempo madurar (equipo, producto, compañía,...)</li>
</ul>


<h2><a href="http://cas2015.agile-spain.org/charlas/">Building resilient integrations</a>, de <a href="https://twitter.com/cuvuligio">Dave Moore</a></h2>

<p>Esta charla tuvo su parte teórica y su parte práctica. De la parte teórica, decir que debemos entender que los fallos están en todas partes, por lo que es nuestro trabajo hacer software que no falle, que sea tolerante a fallos de sistemas externos. Algunas técnicas para hacerlo podrían ser: tests automáticos (no mienten, la documentación sí), aislar integraciones que herramientas de terceros (creando interfaces que las separen de nuestra applicación), utilizar nuestro propio modelo de datos, política de reintentos de conexión,...</p>

<p>En el taller de después tuvimos la oportunidad de poner todo esto en prática. Un taller super divertido.</p>

<h2><a href="http://es.slideshare.net/juanignaciosl/continuous-integration-at-cartodb">Continuous integration in CartoBD</a>, de <a href="https://twitter.com/juanignaciosl">Juan Ignacio Sánchez</a></h2>

<p>Juan Ignacio empezó fuerte, comentando que, aunque hay millones de herramientas, es el <strong>equipo</strong> quien realmente puede hacer que la integración, entrega y despliegue contínuo funcionen.</p>

<p>¿Cómo lo hacen en CartoDB? Planeándolo desde antes que la gente entre a trabajar con ellos, despligando desde el primer día, planes iterativos e incrementales, tests, code reviews, pull requests, feature toggles, pequeñas releases a grupos controlados de usuarios (canary releases), posibilidad de hacer rollback rápidamente (pequeños despliegues llevan a que esto sea posible), análisis post-mortem de grandes fallos, mucha instrumentación y monitorización.</p>

<h2><a href="http://www.slideshare.net/lantoli/believe-it-or-not-keynote-cas-2015-55802209">Keynote técnica</a>, de <a href="https://twitter.com/lantoli">Leo Antolí</a></h2>

<p>Leo hizo incapié en lo más profundo de agile y lean: no te creas lo que te cuenten, pruébalo y si te funciona úsalo, si no te funciona, descártalo. Hay mucho estudios que dicen que una práctica es X veces mejor. Analiza esos estudios y te darás cuenta de que son humo. Pon en duda el pair programming, TDD, mejoras en productividad, code dojos, code retreats, craftsmanship, deuda técnica, tasa de proyectos software fallidos,...</p>

<p>Como buena keynote, lo que me llevo de esta charla son pensamientos, dudas, cuestiones. Debo entender que el software no es el fin, es un medio para conseguir un fin. Deja de usar números no probados. Cuenta experiencias propias (no sirven para demostrar nada, pero son algo real). Y sobretodo, mantén un <strong>espiritu crítico</strong>.</p>

<h2><a href="https://www.youtube.com/watch?v=_CcO9upHiDU&amp;t=9m20s">Keynote viernes</a>, de <a href="https://twitter.com/rachelcdavies">Rachel Davis</a></h2>

<p>Esta keynote trató de introducir cambios, de introducir tiempo para el aprendizaje. Debemos crear tiempo para ello a lo largo de nuestra semana. No tengas prisa en introducir cambios, la gente necesita <strong>tiempo</strong>.</p>

<p>De esta keynote quiero recordar dos consejos de Rachel: comparte lo aprendido (por ejemplo en esta CAS), invierte tiempo en profundizar en lo aprendido.</p>

<h2><a href="https://medium.com/@borillo/el-modelo-de-desarrollo-mete-saca-be17304ad1df#.b0vwf7ben">Escapando del modelo mete-saca</a>, de <a href="https://twitter.com/borillo">Ricardo Borillo</a></h2>

<p>¿Estamos seguros de que lo que quiere el usuario es un simple sistema CRUD? ¿No hay una forma de aportar más valor? Un CRUD es muy genérico, seguro que no resuelve las necesidades del usuario con la mejor eficiencia.</p>

<p>Ricardo analizó qué nos lleva a este modelo: pobres historias de usuario, mal definidas, que nos llevan a hacer cosas generales; los frameworks (como ORMs); y arquitecturas de usuario pobres, con componentes maestro-detalle, consumo de apis REST,... todo esto nos conduce al modelo mete-saca.</p>

<p>La solución propuesta por Ricardo, un único punto de entrada (en contraposición a los múltiples endpoints REST) con una arquitectura <a href="https://en.wikipedia.org/wiki/Command%E2%80%93query_separation#Command_Query_Responsibility_Segregation">CQRS</a>. Cada <em>comando</em> correspondería con una acción del usuario, una historia de usuario, un caso de uso muy específico, que nos conduciría a tener las mínimas funcionalidades desarrolladas con la máxima eficiencia y la mejor usabilidad para el usuario.</p>

<h2><a href="http://www.slideshare.net/programania/software-economics-tradeoffs-of-decoupled-softwre">Economía del software</a>, de <a href="https://twitter.com/artolamola">Luis Artola</a> y <a href="https://twitter.com/ggalmazor">Guillermo Gutierrez</a></h2>

<p>Luis y Guillermo nos condujeron en un viaje apasionante desde las necesidades de negocio hasta detalles del código, tales como las dependencias. En el camino, comentaron multitud de conceptos, de buenas prácticas, hicieron referencia a charlas de todo el evento (lo que pone de manifiesto lo amplio de su charla).</p>

<p>Concepto clave: negocio quiere entrega de <strong>valor</strong>, minimizando <strong>costes</strong> y <strong>riesgos</strong> pero manteniendo <strong>opciones</strong> abiertas. El mayor en el software es el coste de evolución. Cuanto más difícil sea cambiar algo, más costoso será a lo largo del tiempo. El desarrollo iterativo e incremental reduce los riestos. El despliegue de pequeñas funcionalidades, interfaces, inversión de control son formas de crear opciones.</p>

<h2><a href="http://eamodeorubio.github.io/effective-ui-bdd-with-js/short.html#/">Effective UI testing</a>, de <a href="https://twitter.com/eamodeorubio">Enrique Amodeo</a></h2>

<p>Todo comenzó con el dilema: ¿debo testear cada clase individual o todo el sistema? Pues ni lo uno, ni lo otro. En cuanto a la interfaz gráfica, la podríamos dividir en dos dominios: la presentación y la lógica de usabilidad.</p>

<p>¿Como testear cada parte? Para testear la presentación debemos mockear el DOM del navegador. Para testear la lógica de usabilida, debemos mockear el acceso al servidor. Basándose en eso, Enrique recomienda seguir dos prácticas: encapsular los accesos al servidor y los accesos al DOM.</p>

<h2>Trabajo para casa</h2>

<ul>
<li>Parece que integración, entrega y despliegue contínuos son prácticas básicas para empresas exitosas.</li>
<li>Prepara las conferencias a las que asistas: busca el lugar donde se va a celebrar e imprime un plano de las salas que se van a utilizar, crea una checklist con las cosas que hacer antes de asistir a un evento. Como por ejemplo prepar preguntas a hacer a gente interesante que quiero conocer (me gustó aquello que hiciste/dijiste, discrepo con aquello que ...)</li>
<li>Echar un vistazo a la herramienta Screen Hero</li>
<li>Libro recomendado por Leo Antolí: Pensar rápido, pensar despacio</li>
<li>Libro recomendado por Rachel Davis: Drive (cómo introducir cambios)</li>
<li>Busca slide de Rachel Davis sobre <em>Sources of learning</em></li>
<li>Busca referencia a lo que falta de SOLID: RCCASS</li>
<li>¿Qué es el patrón Page Object?</li>
<li>Slide con las <em>mejores prácticas</em> recomendadas por Enrique Amodeo</li>
</ul>


<h2>Recursos</h2>

<ul>
<li><a href="https://gist.github.com/nhpatt/89f90a27042e4fd1db7b">Charlas, artículos y más sobre la CAS 2015</a></li>
<li><a href="https://www.youtube.com/watch?v=C6Sy0v19RAc">Streaming del día 1</a></li>
<li><a href="https://www.youtube.com/watch?v=_CcO9upHiDU">Streaming del día 2</a></li>
<li><a href="http://martinfowler.com/bliki/CQRS.html">Martin Fowler acerca de CQRS</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mi fracción del Codemotion 2015]]></title>
    <link href="http://rchavarria.github.io/blog/2015/11/29/mi-fraccion-codemotion/"/>
    <updated>2015-11-29T19:09:00+01:00</updated>
    <id>http://rchavarria.github.io/blog/2015/11/29/mi-fraccion-codemotion</id>
    <content type="html"><![CDATA[<p>Por 4º año consecutivo he tenido el placer de asistir a <a href="http://2015.codemotion.es/">Codemotion</a>, un evento
donde todas las comunidades tecnológicas tienen cabida, un evento con más de
2000 asistentes (este año hablan de 2500), con 8 tracks en paralelo mas 4
talleres.</p>

<p>En esta entrada trato de mostrar mi pequeña porción de lo vivido, por lo que no
esperes que coincida con la tuya si has estado allí, y no esperes que coincida
completamente con la realidad, porque lo que aquí leerás es solo una mínima
parte de todo lo ocurrido.</p>

<!-- more -->


<p>En un evento de este calibre no solo hay que valorar las charlas técnicas que
te inspiran, te enseñan y te encienden la chispa de la curiosidad. También hay
que valorar lo que pasa fuera de las charlas. Este año me he centrado más en
las charlas. Aún así, he conocido en persona a <a href="http://ocana.github.io/">Miguel</a>, que ya tenía ganas, y
he vuelto a ver a antiguos amigos de profesión que estamos convirtiendo en
costumbre lo de encontranos cada año en el Codemotion.</p>

<p>Otros años me ha parecido que han asistido más estudiantes, este año, la
impresión que he tenido es que el porcentaje de estudiantes/profesionales ha
estado bastante igualado.</p>

<p>Charlas a las que he asistido:</p>

<h2><a href="http://2015.codemotion.es/agenda.html#5677904553836544/43004005">El arte de ser vago</a>, de <a href="http://cjgaliana.com/">Camilo Galiana</a></h2>

<p>Esta charla fue un calentamiento perfecto. Camilo se expresa perfectamente, y
llevó un ritmo bastante bueno en su charla. Se podría resumir la charla como:</p>

<blockquote><p>Se programa para personas, no para las máquinas</p></blockquote>

<p>Se hizo un repaso de multitud de principios de programación imprescindibles
para un buen desarrollo de aplicaciones. Me quedaría con una frase graciosa.
Imagínate en una entrevista:</p>

<blockquote><p>¿Cuál es tu mayor fortaleza?
Soy vago</p></blockquote>

<h2><a href="http://2015.codemotion.es/agenda.html#5677904553836544/50404003">Technical debt for developers... and managers!</a>, de <a href="https://twitter.com/luiyo">Luis García Castro</a></h2>

<p>Charla completísima acerca del concepto de <a href="/blog/2015/10/12/deuda-tecnica/">deuda técnica</a>. Luis cubrió casi
todos los aspectos relacionados con la deuda técnica (y otras deudas):
metáfora, síntomas, ventajas, inconvenientes, cómo evitarla, cómo pagarla,...</p>

<p>La charla estuvo bastante bien, y muy bien amenizada por Luis. Hubo debate, por
lo que estuvo bastante animada.</p>

<p>Como punto gracioso, Luis expuso una serie de frases que todos hemos dicho u
oido en el trabajo, como por ejemplo:</p>

<blockquote><p>Pon un comentario y lo arreglamos luego</p></blockquote>

<h2><a href="http://2015.codemotion.es/agenda.html#5677904553836544/48514002">Dando amor a los tests</a>, de <a href="https://twitter.com/kinisoftware">Joaquín Engelmo</a></h2>

<p>Esta es la segunda parte de una charla de Kini (creo recordar que se titulaba
«Adicto al verde». Como segunda parte, los conceptos tratados en esta charla
son más avanzados y por las pequeñas preguntas para responder a mano alzada, no
toda la audiencia estaba familiarizada con ellos, por lo que seguro que hubo
mucha gente que aprendió mucho de la charla.</p>

<p>De la charla me llevo la confirmación de una sospecha que tenía: cuantos más
tests tienes y más grande es tu aplicación, más debes tratar a los tests como
código de producción y seguir los mismos principios, de lo contrario, cualquier
pequeño cambio requerirá múltiples cambios en los tests y supondrán más un
lastre que una ayuda.</p>

<h2><a href="http://2015.codemotion.es/agenda.html#5699289732874240/49544011">Del infierno al cielo</a>, de <a href="https://twitter.com/rrequero">Raúl Requero</a></h2>

<p>Para ser una charla a primera hora, Raúl fue valiente y fue directo al grano,
sin rodeos. Prometía ser una charla dura. Y lo fue, pero fue genial. Charla muy
práctica, llena de ejemplos y de código (¡bien!).</p>

<p>La charla se centró en una funcionalidad introducida en ECMAScript 2015, los
generadores. Y Raúl los destripó de arriba a abajo: qué son, cuándo
utilizarlos, cuándo no, librerías que hacen su uso más sencillo (si quieres que
te duela la cabeza busca <a href="https://github.com/thunks/thunks">thunks</a> y <a href="https://github.com/tj/co">co</a>, increíbles).</p>

<h2><a href="http://2015.codemotion.es/agenda.html#5699289732874240/50504009">Coding culture</a>, de <a href="https://twitter.com/svenpet">Sven Peters</a></h2>

<p>Estaba deseando ver esta charla, no me la perdería por nada del mundo. Había
visto algunas charlas grabadas de Sven, y es un ponente con muchas tablas. Unos
gráficos espectaculares y una historia muy depurada. Con giros argumentales
inesperados y con mucho sentido del humor.</p>

<p>Sven presentó distintos conceptos relacionados con la cultura de empresa y
distintas actividades que se realizan en Attlassian. Habló de la cultura de la
innovación, de la felicidad, del balance de la pasión (producto o cliente), de
equipo y cultura que escala.</p>

<p>Si tienes ganas, aquí encontrarás todas las <a href="http://svenpet.com/talks/">charlas de Sven</a>.</p>

<h2><a href="http://2015.codemotion.es/agenda.html#5699289732874240/49534007">Programando en diferido</a>, de <a href="https://twitter.com/flipper83">Jorge Juan Barroso</a></h2>

<p>En un principio no tenía pensado entrar en esta charla, pero no me arrepiento
de nada. Jorge es un ponente increíble, fue una sorpresa muy positiva para mí.
Explicó conceptos muy complejos de una manera muy clara y sencilla. Esta charla
también me sirvió para refrescar un poco mi cada vez más aturdido <em>sentido
Javero</em>, conociendo de mano de un crack conceptos como <em>Streams</em> en Java,
observables (cold y hot), la librería RxJava y el <em>Reactive manifesto</em></p>

<p>De la charla me llevo un consejo que me pareció buenísimo</p>

<blockquote><p>Primero resuelve el problema, luego escribe el código</p></blockquote>

<h2><a href="http://2015.codemotion.es/agenda.html#5699289732874240/45634007">Navegando con el piloto automático con CasperJS</a>, de <a href="https://twitter.com/asanzdiego">Adolfo Sanz</a></h2>

<p>En esta charla Adofo nos presentó CasperJS, que no es una herramienta que corre
en NodeJS, si no que es una herramienta de scripting, y que entre otras cosas
sirve para programar o automatizar tus navegaciones web. Aunque el uso que más
interesó a la gente, a la vista de la cantidad de preguntas al ponente, fue la
posibilidad de escribir y ejecutar tests de aceptación con la herramienta.</p>

<p>Fue un charlas super práctica, toda con código en vivo y con demostraciones.</p>

<h2><a href="http://2015.codemotion.es/agenda.html#5699289732874240/44774010">Help, I need more women!</a>, de <a href="https://twitter.com/Laura_Morillo">Laura Morillo</a>, <a href="https://www.koliseo.com/anafvm">Ana Fernández</a> y <a href="https://www.koliseo.com/mlorenzosanchez">Marina Lorenzo</a></h2>

<p>El título de la charla lo dice todo, el discurso de la misma giró en torno al
hecho de la poca presencia femenina en el campo tecnológico y en el análisis de
sus posibles causas. Una de ellas se atribuye a la escasez de <em>referentes</em>, por
lo cual las niñas (las futuras ingenieras) no tienen quien les inspire y no
eligen carreras científicas o relacionadas con las ingenierías.</p>

<p>Las ponentes hicieron un repaso de las distintas mujeres destacadas en el campo
de la ingeniería de la historia y de cómo los medios de comunicación
representan a las mujeres en este campo, que por cierto, no es muy buena la
imagen que proyectan.</p>

<p>Finalmente, expusieron una serie de iniciativas que se están llevando a cabo a
nivel nacional e internacional, y creo que consiguieron que muchas mujeres
asistentes se interesaran por ellas, así que ¡FELICIDADES!</p>

<h2><a href="http://2015.codemotion.es/agenda.html#5699289732874240/48544008">Taiga, de 0 a 70.000 proyectos</a>, de <a href="https://twitter.com/diacritica">Pablo Ruiz</a></h2>

<p>En esta charla Pablo presentó Taiga, un gestor de proyectos ágiles. Soporta
Scrum y Kanban. Descrito así, parece que fue una charla absolutamente
publicitaria, pero para nada. Por supuesto, Pablo presentó la herramienta. Pero
después dió paso a una serie de peticiones de funcionalidad de los usuarios a
la herramienta y le dió un enfoque muy especial. Mezcló los valores y
principios ágiles con los valores y principios que defienden en Taiga y
justificó el porqué hacen caso, o no, a sus usuarios. Una clase absolutamente
magistral de lo que significa ser ágil y gestionar proyectos ágiles.</p>

<p>Algunas de las funcionalidades pedidas por usuarios <em>ágiles</em> serían: llevar una
cuenta de las horas consumidas, contabilizar historias no terminadas en un
sprint, poder representar personas asignadas a varios proyectos,...</p>

<h2><a href="http://2015.codemotion.es/agenda.html#5699289732874240/43004009">Gente que hace cosas con cacharros</a>, de <a href="https://www.koliseo.com/miguelangellv">Miguel Ángel López</a> y <a href="https://twitter.com/josejuansanchez">Jose Juan Sánchez</a></h2>

<p>Y para terminar, una charla que me sorprendió. Se podría resumir con algo que
dijo Miguel Ángel, que según él es a lo que se dedica en su tiempo libre:</p>

<blockquote><p>Hago cosas que, no sirven para nada, pero molan</p></blockquote>

<p>Así fue la charla. Llena de experimentos de <em>maker</em>, de pequeños inventos
curiosos, imaginativos, que no tenían valor útil, no iban a cambiar el mundo,
pero molaban mil. Fue la charla ideal para terminar dos días a tope. Divertida,
desenfada y llena de imaginación. ¡Qué ganas tengo de usar algo parecido con mi
hijo!</p>

<h2>Trabajo para casa</h2>

<p>Y esto fue más o menos mi Codemotion. Los organizadores del mismo no quieren
que Codemotion termine aquí, quieren que ahora empiece el #codemotion2015. La
idea de continuar es que lo aprendido no se quede en estos dos magníficos días,
si no que los extendamos en el tiempo. Por eso mismo, éstos son los deberes que
me llevo para casa:</p>

<ol>
<li>Conoce tus herramientas: ¿qué tal si empiezo a usar la consola de PhpStorm?</li>
<li>¿Existe alguna forma de cuantificar la deuda técnica?</li>
<li>Buscar acerca del concepto de <em>property-based testing</em>. Ha aparecido por mi
radar últimamente, pero no le he hecho mucho caso. Ha llegado el momento</li>
<li>Attlassian Mood App</li>
<li>¿Podrías encontrar alguna utilidad a CasperJS?</li>
<li>Serie <em>Halt &amp; Catch Fire</em></li>
<li>Proponer PI Week en el trabajo</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Soft skills]]></title>
    <link href="http://rchavarria.github.io/blog/2015/11/08/soft-skills/"/>
    <updated>2015-11-08T18:36:00+01:00</updated>
    <id>http://rchavarria.github.io/blog/2015/11/08/soft-skills</id>
    <content type="html"><![CDATA[<h6>de John Sonmez</h6>

<p><img class="left" src="/images/2015/soft-skills.jpg" width="239" height="300" title="Soft skills" ></p>

<h3>Por qué lo he leído</h3>

<p>Creo recordar que vi que Miguel, autor del blog <a href="http://ocana.github.io/">Dev's kitchen</a>, lo marcaba
como pendiente para leer y le di un vistazo. Por aquel momento seguía
el blog del autor del libro, y tenía varios posts interesantes. Y el libro
también me lo pareció: ¿Mejorar en tu carrera? ¿Aprender habilidades no
técnica?</p>

<p>Me gusta intercalar libros técnicos y no técnicos, y este libro parecía estar a
medio camino entre ambos. Parecía una buena elección, así que me decidí leerlo.</p>

<!-- more -->


<h3>Qué esperaba</h3>

<p>Esperaba consejos e historias relacionadas con el software, pero ninguna
historia técnica: cómo relacionarte con tus compañeros, cómo resolver
conflictos, cómo negociar con tu jefe. Esperaba más temas relacionados con la
relación de las persona que otra cosa. Bueno, y también un poco de
productividad. Quién sabe.</p>

<h3>Qué encontre</h3>

<p>Encontré todo eso y más, mucho más. El libro trata temas tan dispares que hay
veces que no sabes qué tipo de libro estas leyendo. Hay tantos consejos, y de
temáticas tan variadas, que es imposible no encontrar algún consejo o idea
nuevos.</p>

<p>El libro está dividido en secciones, englobando cada uno una temática general:
carrera profesional, marca personal, aprendizaje, producividad, economía,
salud y espiritualidad. Cada sección está formada por una serie de capítulos, y
cada capítulo contiene varios <em>artículos</em>. La verdad es casi como leer su blog,
pero un post detrás de otro y organizados por temáticas.</p>

<h3>Conclusiones</h3>

<p>El libro es tan variado que cualquier persona encontraría algún consejo
valioso. John Sonmez se gana la vida de esta forma, aconsejando a programadores
acerca de cómo mejorar en su carrera. En este libro encontrarás consejos de lo
más variopintos: desde cómo aprender, a cómo invertir en el negocio
inmoviliario, pasando por practicar deporte. Incluso hay consejos espirituales.
En ese punto el libro me dejó un poco de piedra, creo que ahí se pasó, y el
libro pierde un poco su identidad.</p>

<p>Destacaría las primeras secciones: cuando habla de la carrera profesional y el
aprendizaje. También me gustó el apartado dedicado a temas financieros, siempre
es intersante conocer cómo funciona el dinero.</p>

<p>El que menos me gustó fue el espiritual, lleno de buenrollismo y autoayuda. No
sé, no le cogí el punto. Aún así, en general, me parece un libro bastante recomendable.</p>

<h3>Qué he aprendido</h3>

<p>Casi todo el libro habla de ponerse objetivos, de establecer metas intermedias
y de hacer seguimiento, de empezar poco a poco, de ser constante, y de trabajar
duro. Conceptos aplicables a cualquier aspecto de la vida. Cuando habla de
objetivos, éstos pueden estar formados por tareas demasiado grandes, que
parece imposible de realizar. El truco está en dividir esa gran tarea en tareas
secuenciales más pequeñas. Lo más importante aquí es la palabra
<strong>secuenciales</strong>.</p>

<p>Cómo hackear una entrevista de trabajo: la idea es no tener que mandar
currículums a las empresas, si no que ellas te contacten. Te contacten porque
han tenido noticias tuyas de alguien <em>de dentro</em>. Para ello, deberás establecer
relaciones personales con trabajadores de la empresa en la que deseas trabajar:
lee sus blogs,... Piensa diferente y encuentra formas de acercarte a ellos.</p>

<p>Algunas de las habilidades que necesitarás para tu próximo trabajo no las
tienes todavía. La clave es <strong>todavía</strong>. Hay que ir con la confianza de que las
conseguirás.</p>

<p>John habla mucho de construir una marca personal, para ello necesitarías: un
mensaje (la frase por la que te reconocerán), elementos visuales (un logo,...),
consistencia y una exposición contínua (no necesariamente en Twitter
solamente).</p>

<p>Me ha encantado los capítulos donde describe su proceso de aprendizaje en 10
pasos. Parece mucho de libro de autoayuda, pero la verdad es que cuenta muy
buenas ideas. El proceso sería algo tal que así:</p>

<ol>
<li>Entender la habilidad que se quiere aprender</li>
<li>Delimitar el ámbito</li>
<li>Definir qué se va a considerar como éxito</li>
<li>Encontrar recursos</li>
<li>Crear un plan de aprendizaje</li>
<li>Filtrar los recursos</li>
<li>Aprender lo suficiente para comenzar</li>
<li>Experimentar, jugar, buscar puntos desconocidos, hacerse preguntas</li>
<li>Aprender lo suficiente para hacer algo de utilidad</li>
<li>Enseñar lo aprendido, y repetir desde el paso 7</li>
</ol>


<p>Me ha interesado mucho el concepto de <em>cuotas</em> para conseguir objetivos.
Funciona para los objetivos en los que hay que ir haciendo pequeñas acciones a
lo largo de mucho tiempo, por ejemplo, a la hora de hacer ejercicio. La idea es
crear una cuota de cuánto hay que conseguir tener hecho para un determinado
período de tiempo. Por ejemplo: salir a correr 3 veces por semana, o hacer
100km en bicicleta cada semana, o leer 3 artículos técnicos al mes.</p>

<h3>Frases que me gustaría recordar</h3>

<blockquote><p>Un profesional comprende qué trabajo ha de hacerse, lo prioriza y se pone
manos a la obra</p></blockquote>

<!-- -->


<blockquote><p>Divide un gran objetivo en pequeños objectivos que puedan corresponder a
meses, semanas o días. Escribe el gran objetivo donde lo veas todos los días
para recordarte en qué tienes que trabajar</p></blockquote>

<!-- -->


<blockquote><p>Por enésima vez: si quieres se un buen programador, debes aprender a cómo
trabajar de forma efectiva con gente, incluso si la mayor parte de tu trabajo
es escribir código</p></blockquote>

<!-- -->


<blockquote><p>Cuando el foco de una compañía no es el software, normalmente los
programadores no son muy respetados. Aquellas empresas que dependen de un
producto software tienen muchas más probabilidades de valorar mucho mejor a
los profesionales que contratan</p></blockquote>

<!-- -->


<blockquote><p>Si debes elegir entre dinero o responsabilidad, la mejor opción (para el
largo plazo) es siempre más responsabilidad</p></blockquote>

<!-- -->


<blockquote><p>Deberías estar siempre aprendiendo algo nuevo o mejorando de alguna forma tus
habilidades</p></blockquote>

<!-- -->


<blockquote><p>¿Cómo crear un producto? Identifica unas cuantas audiencias objetivo para las
que puedas crear un producto potencial. Elige una de estas audiencias e
identifica donde puedes encontrar a miembros de ese grupo. Contacta con ellos
y averigua si puedes resolver alguno de sus problemas</p></blockquote>

<!-- -->


<blockquote><p>La manera correcta de promocionarse a sí mismo es proporcionar valor a los
demás</p></blockquote>

<!-- -->


<blockquote><p>Tu objectivo principal debería ser proporcionar valor a los demás. Si lo que
dices o haces no ayuda a nadie, todo el mundo te ignorará. Cada vez que
decidas crear algo (escribir un artículo, grabar un podcast o screencast,...)
deberías mirarlo desde la perspectiva de cómo estás creando valor para los
demás</p></blockquote>

<!-- -->


<blockquote><p>El enfoque es una cosa del momento: es muy difícil conseguir el foco, pero
relativamente sencillo mantenerlo una vez que lo has adquirido</p></blockquote>

<!-- -->


<blockquote><p>La multitarea es posible. Es posible combinar una tarea que no requiere
concentración con algunas tareas que sí lo requieran</p></blockquote>

<!-- -->


<blockquote><p><em>Burnout</em>: Tendemos a estar ilusionados y motivados sobre las cosas nuevas al
principio, pero cuanto más avanzamos, más rápido nos acercamos a ese
sentimiento de no poder más. En realidad, estamos topándonos con una pared.
¿Cuál es la solución? Intentarlo más fuerte. Esforzándonos contra la
dificultad es el secreto para superar ese sentimiento</p></blockquote>

<!-- -->


<blockquote><p>Los hábitos consisten básicamente de tres cosas: una señal (qué causa la
acción del hábito), una rutina (el hábito en sí mismo) y una recompensa (es
lo que hace que el hábito se mantenga interesante)</p></blockquote>

<!-- -->


<blockquote><p>Una razón para el salario que estás demandando nunca puede ser <em>porque lo
necesito</em>. En vez de eso, debes enfocarlo desde la perspectiva de demostrar
que vales esa cantidad de dinero o que lo vale el beneficio que estás
poniendo encima de la mesa</p></blockquote>

<!-- -->


<blockquote><p>De todos los errores financieros que se pueden cometer, el mayor de ellos es
incurrir en una deuda</p></blockquote>

<h3>Recursos relacionados</h3>

<ul>
<li><a href="https://github.com/rchavarria/blog-post-incubator/blob/master/published-book-notes/soft-skills-by-john-sonmez.markdown">Notas tomadas sobre Soft skills</a></li>
<li>Blog <a href="http://ocana.github.io/">Dev's kitchen</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[You've got commit!]]></title>
    <link href="http://rchavarria.github.io/blog/2015/10/25/youve-got-commit/"/>
    <updated>2015-10-25T15:18:00+01:00</updated>
    <id>http://rchavarria.github.io/blog/2015/10/25/youve-got-commit</id>
    <content type="html"><![CDATA[<p>Una de las mejores formas de aprender es haciendo cosas (<em>learning by doing</em>,
que está muy de moda ahora). Y otra forma muy buena es manteniendo
conversaciones con profesionales de tu sector. Por todo lo aprendido hay que
estar agradecido, y qué mejor forma de agradecer que contribuir a la comunidad,
a tu profesión, realizando algún trabajo del que se puedan beneficiar otros. La
siguiente historia cuenta un camino que estoy recorriendo, de cómo empezé algo
por el simple hecho de aprender y terminé participando en un proyecto open
source como es <a href="http://exercism.io/">exercism.io</a>.</p>

<p><img class="center" style="width: 225px" src="http://rchavarria.github.io/images/2015/exercism-logo.svg"/></p>

<!-- more -->


<h2>El origen</h2>

<p>Llevaba un tiempo utilizando <a href="http://www.solveet.com/">solveet.com</a> para practicar con pequeños
ejercicios de programación. De hecho, utilicé la plataforma con distintos
lenguajes que estaba interesado en aprender. Pero poco a poco fui perdiendo la
motivación para usarla. No recibía feedback de mis soluciones, de lo cual se
pueden deducir dos cosas: que mis soluciones eran penosas o que la mayoría de
los usuarios no estaban por la labor de compartir.</p>

<p>En realidad, creo que la causa principal era que yo aportaba mi solución tiempo
después de la última aportada, así que los usuarios probablemente ya habrían
perdido interés en ese problema en concreto. No le puedo echar la culpa a
Solveet, es una plataforma estupenda. Si estás buscando algo para practicar, y
en español, te lo recomiendo. Disfrutarás de lo lindo.</p>

<h2>Expandiendo horizontes</h2>

<p>Con esa falta de motivación, llevaba rondando por la cabeza probar otras
plataformas similares, y me decidí por <a href="https://projecteuler.net/">Project Euler</a>. Hablaban muy bien de
ella, lleva mucho tiempo en funcionamiento y goza de fama, así que tenía que
ser buena. Pero no duré mucho. Una de las <em>normas</em> de la casa pide que no hagas
público tu código con el que resuelves los problemas. Pero ese es uno de los
objetivos que busco, que la gente critique mi código y poco a poco vaya
aprendiendo.</p>

<p>Por casualidad, vi esta <a href="http://passionatevoices.org/2015/06/27/episode-3-katrina-owen/">entrevista a Katrina Owen</a>, creadora de exercism.io y
me pareció que sería buena idea probar la plataforma. Uno de los requisitos es
instalar un programa, para poder bajarte problemas a tu ordenador, resolverlos
y poder subirlos a la plataforma, lo cual no me llamaba mucho la atención. Pero
<a href="http://garajeando.blogspot.com.es/">Manuel Rivero, en Garajeando</a>, un blog que sigo, tiene varios post de sus
soluciones en exercism.io, así que malo no podía ser.</p>

<h2>Los baches del camino</h2>

<p>Yo quería practicar resolviendo problemas con ECMAScript 2015. Ahí me llevé el
primer chasco. Existía un track para JavaScript, pero no para ES2015. No se por
qué, pero miré el código fuente en GitHub de exercism.io. Vi que había un
repositorio para ECMAScript, pero en la página no existían esos ejercicios.
Descubrí que era porque todavía no tenía el número de problemas necesarios para
ser público. Hice un fork del proyecto, y me puse a juguetear.</p>

<p>Me encontré con unos cuantos problemas para ser capaz de montar el entorno de
desarrollo y ejecutar los tests: dependencias desactualizadas, comandos que no
se ejecutaban bien en Windows (parecía que solo funcionaba en Mac). Después de
pelearme un poco con el código y la configuración, con unas pequeñas
modificaciones solucioné los problemas que tenía. Subí el código a
<a href="https://github.com/rchavarria">mi cuenta de GitHub</a> e hize un <em>Pull Request</em> al proyecto.</p>

<h2>Sorpresa</h2>

<p>¡Y contestaron!  Después de pulir un par de detalles (es bastante común para
primerizos y también la razón por la que muchos se echan para atrás a la hora
de contribuir al open source) aceptaron mi solución. ¡Había contribuido a un
proyecto open source!</p>

<p>Pero todavía había cosas que me molestaban. Detalles. <em>El diablo está en los
detalles</em>, dicen. La verdad es que no recuerdo exactamente qué era, pero tenía
<em>trabajo</em> por hacer. Pregunté un par de cosas a Katrina, arreglé un par de
detalles más, algún Pull Request más, y sin esperarlo:</p>

<blockquote><p>You've got commit!</p></blockquote>

<p>¿Qué es eso? ¿Qué significa? Tuve que leer el correo varias veces. No entendía.
bla bla bla, <em>te han añadido a un par de grupos en GitHub</em>, bla bla bla,
<em>permisos de escritura</em>, bla bla bla, ... ¡Me estaban dando permisos de
escritura en el proyecto! Sienta bastante bien saber que estás contribuyendo a
un proyecto open source, y que lo están utilizando muchos usuarios.</p>

<h2>¿El final?</h2>

<p>¿Y ahora qué? Tenía que seguir. No podía dejarlo ahí. Asi que me puse como
objetivo que exercism.io tendría su <a href="http://exercism.io/languages/ecmascript">track de ECMAScript 2015</a>.</p>

<p>Un punto para lograrlo era incorporar al menos 10 ejercicios al track. Fácil.
Un poco de trabajo... y conseguido. Pero otro punto requería de varias
personas. La idea es que haya varias personas encargadas de gestionar el track,
dando feedback a los primeros usuarios, para que no se sientan desamparados, e
ir manteniendo el código con nuevos cambios provenientes del proyecto global.
Pequeñas tareas comunes a todos los lenguages.</p>

<p>¡Me quedé flipado! Cuando contacté por email con varios usuarios de
exercism.io, sin conocerlos de nada,... ¡Me respondieron todos! ¡Todos! Algunos
de ellos no podían embarcarse en el proyecto, pero respondieron. Flipando. Con
su ayuda, el track se hizo público y el trabajo duro acaba de comenzar. Ahora
toca dar feedback a los usuarios y seguir incorporando ejercicios, para que los
usuarios vean que el track está vivo y se animen a seguir practicando sus
habilidades como programadores.</p>

<h2>¿Te animas?</h2>

<p>Así que, ya hay <a href="http://exercism.io/languages/ecmascript">track de ECMAScript 2015</a> en exercism.io. Os animo a probar la
plataforma, a practicar, a mejorar y a comentar las soluciones de los demás.
Espero veros por allí. Si decidis probarlo, veréis mi careto.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Los eventos que vienen]]></title>
    <link href="http://rchavarria.github.io/blog/2015/09/27/eventos-que-vienen/"/>
    <updated>2015-09-27T23:11:00+02:00</updated>
    <id>http://rchavarria.github.io/blog/2015/09/27/eventos-que-vienen</id>
    <content type="html"><![CDATA[<p>Cuando leí el post de <a href="https://twitter.com/voylinux">Pablo Bernardo</a>, <a href="http://voylinux.com/yo-voy-al-gnu-social-camp-2015/">Yo voy al GNU Social Camp 2015</a>, me
sentí inspirado para escribir algo parecido. La recta final del año viene
cargadito de eventos, y les tengo ganas, muchas ganas. Y que mejor manera de ir
calentando motores que hacer como Pablo y escribir sobre dichos eventos.</p>

<p>¿De qué eventos estoy hablando?</p>

<ol>
<li><a href="http://globalday.coderetreat.org/">Global Day of Coderetreat</a>, que se celebrará el 14 de noviembre de 2015, a
nivel mundial.</li>
<li><a href="http://2015.codemotion.es/">Codemotion 2015</a>, allá por el 27 y 28 de noviembre de 2015.</li>
<li><a href="http://cas2015.agile-spain.org/">Conferencia Agile Spain 2015</a>, los días 3 y 4 de diciembre de 2015.</li>
</ol>


<p>La agenda está apretada, ¿eh?</p>

<!-- more -->


<h2>Global Day of Coderetreat</h2>

<blockquote><p>A day to celebrate passion and software craftsmanship</p></blockquote>

<p>El año pasado fue <a href="/blog/2014/11/18/mi-primer-code-retreat/">mi primer Code Retreat</a>, y me encantó la experiencia. Este
año está más difícil, y a estas alturas todavía no tengo claro si podré ir. Si
tú puedes, te lo recomiendo. Lo pasarás bien.</p>

<p>Es un evento a nivel global, estiman que este año lo celebren de 100 a 150
ciudades. ¡Increíble!</p>

<h2>Codemotion</h2>

<blockquote><p>Codemotion gets all the IT communities in Spain together for two days. We
take an entire university building to present the best of each technology and
get you far away from your comfort zone.</p></blockquote>

<p>Este año el Codemotion vuelve a repetirse en la Universidad San Pablo CEU, en
el campus de Boadilla del Monte (Madrid). Ésta es la madre de las conferencias.
El año pasado hubo casi 2000 asistentes. <strong>¡2000!</strong>. Una locura, es
prácticamente imposible no encontrarse con alguien conocido en ella.
<a href="/blog/2014/11/29/notas-codemotion-2014/">El año pasado pude asistir</a>, y este año también espero poder hacerlo.</p>

<p>Es una conferencia donde se involucran muchísimas comunidades locales, donde
acuden ponentes internacionales de muy alto nivel. No solo hay charlas, también
hay talleres, los patrocinadores montan pequeñas fiestas y muchos de ellos
organizan concursos para disfrute de los asistentes.</p>

<p>Si crees que por dos días de conocer a gente interesantísima te va a salir por
un ojo de la cara te equivocas. El Codemotion debe ser uno de los eventos más
accesibles (en cuanto a coste de entrada) de toda España. Por menos de 50€
tienes derecho a poder absorber cuanta información y contactos puedas durante
dos días. A tí no se, pero a mí me parece alucinante.</p>

<h2>Conferencia Agile Spain</h2>

<blockquote><p>Es un evento anual que generan las personas que viven el desarrollo de
productos de software de una manera diferente</p></blockquote>

<p>En el 2012 acudí a esta misma conferencia, cuando se celebró en Cáceres
(<a href="/blog/2012/11/08/mi-experiencia-en-la-cas2012/">la CAS2012 fue toda un experiencia para mí</a>). Quedé tan prendado del ambiente, de
las charlas, de todo en general, que desde entonces he querido asistir a todas
las que se ha celebrado. Otros años me he quedado con las ganas de ir porque se
celebraba lejos de casa y la pereza de organizarme el viaje pudo con las ganas
de asistir. Este año se celebra en Madrid, en el <a href="http://www.circulobellasartes.com/">Círculo de Bellas Artes</a>, así
que este año no hay excusa.</p>

<p>Como muestra de lo genial de la conferencia, existe un
<a href="https://trello.com/chairscas2015">proceso de votación de charlas</a>. Asi que tú mismo participas en el proceso de
creación del evento. Existen distintos tracks, distintas temáticas de las
charlas, para que ningún tema <em>Agile</em> se quede sin representación.</p>

<p>Si participas en el proceso te darás cuenta del nivel de los ponentes. Si echas
un vistazo, seguro que te convence y te apetecerá asistir. Si no, no sé qué más
te puedo contar para que te pases por allí: se celebra en un lugar emblemático,
con ponentes astronómicos, con charlas de temáticas muy variadas y con unos
asistentes inmejorables. ¿A qué esperas?</p>
]]></content>
  </entry>
  
</feed>

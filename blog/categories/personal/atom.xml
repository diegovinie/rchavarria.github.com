<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: personal | R. Chavarria's Blog]]></title>
  <link href="http://rchavarria.github.io/blog/categories/personal/atom.xml" rel="self"/>
  <link href="http://rchavarria.github.io/"/>
  <updated>2015-09-27T22:29:21+02:00</updated>
  <id>http://rchavarria.github.io/</id>
  <author>
    <name><![CDATA[Rub&eacute;n Chavarr&iacute;a]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Los eventos que vienen]]></title>
    <link href="http://rchavarria.github.io/blog/2015/09/27/eventos-que-vienen/"/>
    <updated>2015-09-27T23:11:00+02:00</updated>
    <id>http://rchavarria.github.io/blog/2015/09/27/eventos-que-vienen</id>
    <content type="html"><![CDATA[<p>Cuando leí el post de <a href="https://twitter.com/voylinux">Pablo Bernardo</a>, <a href="http://voylinux.com/yo-voy-al-gnu-social-camp-2015/">Yo voy al GNU Social Camp 2015</a>, me
sentí inspirado para escribir algo parecido. La recta final del año viene
cargadito de eventos, y les tengo ganas, muchas ganas. Y que mejor manera de ir
calentando motores que hacer como Pablo y escribir sobre dichos eventos.</p>

<p>¿De qué eventos estoy hablando?</p>

<ol>
<li><a href="http://globalday.coderetreat.org/">Global Day of Coderetreat</a>, que se celebrará el 14 de noviembre de 2015, a
nivel mundial.</li>
<li><a href="http://2015.codemotion.es/">Codemotion 2015</a>, allá por el 27 y 28 de noviembre de 2015.</li>
<li><a href="http://cas2015.agile-spain.org/">Conferencia Agile Spain 2015</a>, los días 3 y 4 de diciembre de 2015.</li>
</ol>


<p>La agenda está apretada, ¿eh?</p>

<!-- more -->


<h2>Global Day of Coderetreat</h2>

<blockquote><p>A day to celebrate passion and software craftsmanship</p></blockquote>

<p>El año pasado fue <a href="/blog/2014/11/18/mi-primer-code-retreat/">mi primer Code Retreat</a>, y me encantó la experiencia. Este
año está más difícil, y a estas alturas todavía no tengo claro si podré ir. Si
tú puedes, te lo recomiendo. Lo pasarás bien.</p>

<p>Es un evento a nivel global, estiman que este año lo celebren de 100 a 150
ciudades. ¡Increíble!</p>

<h2>Codemotion</h2>

<blockquote><p>Codemotion gets all the IT communities in Spain together for two days. We
take an entire university building to present the best of each technology and
get you far away from your comfort zone.</p></blockquote>

<p>Este año el Codemotion vuelve a repetirse en la Universidad San Pablo CEU, en
el campus de Boadilla del Monte (Madrid). Ésta es la madre de las conferencias.
El año pasado hubo casi 2000 asistentes. <strong>¡2000!</strong>. Una locura, es
prácticamente imposible no encontrarse con alguien conocido en ella.
<a href="/blog/2014/11/29/notas-codemotion-2014/">El año pasado pude asistir</a>, y este año también espero poder hacerlo.</p>

<p>Es una conferencia donde se involucran muchísimas comunidades locales, donde
acuden ponentes internacionales de muy alto nivel. No solo hay charlas, también
hay talleres, los patrocinadores montan pequeñas fiestas y muchos de ellos
organizan concursos para disfrute de los asistentes.</p>

<p>Si crees que por dos días de conocer a gente interesantísima te va a salir por
un ojo de la cara te equivocas. El Codemotion debe ser uno de los eventos más
accesibles (en cuanto a coste de entrada) de toda España. Por menos de 50€
tienes derecho a poder absorber cuanta información y contactos puedas durante
dos días. A tí no se, pero a mí me parece alucinante.</p>

<h2>Conferencia Agile Spain</h2>

<blockquote><p>Es un evento anual que generan las personas que viven el desarrollo de
productos de software de una manera diferente</p></blockquote>

<p>En el 2012 acudí a esta misma conferencia, cuando se celebró en Cáceres
(<a href="/blog/2012/11/08/mi-experiencia-en-la-cas2012/">la CAS2012 fue toda un experiencia para mí</a>). Quedé tan prendado del ambiente, de
las charlas, de todo en general, que desde entonces he querido asistir a todas
las que se ha celebrado. Otros años me he quedado con las ganas de ir porque se
celebraba lejos de casa y la pereza de organizarme el viaje pudo con las ganas
de asistir. Este año se celebra en Madrid, en el <a href="http://www.circulobellasartes.com/">Círculo de Bellas Artes</a>, así
que este año no hay excusa.</p>

<p>Como muestra de lo genial de la conferencia, existe un
<a href="https://trello.com/chairscas2015">proceso de votación de charlas</a>. Asi que tú mismo participas en el proceso de
creación del evento. Existen distintos tracks, distintas temáticas de las
charlas, para que ningún tema <em>Agile</em> se quede sin representación.</p>

<p>Si participas en el proceso te darás cuenta del nivel de los ponentes. Si echas
un vistazo, seguro que te convence y te apetecerá asistir. Si no, no sé qué más
te puedo contar para que te pases por allí: se celebra en un lugar emblemático,
con ponentes astronómicos, con charlas de temáticas muy variadas y con unos
asistentes inmejorables. ¿A qué esperas?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The passionate programmer]]></title>
    <link href="http://rchavarria.github.io/blog/2015/09/20/passionate-programmer/"/>
    <updated>2015-09-20T19:07:00+02:00</updated>
    <id>http://rchavarria.github.io/blog/2015/09/20/passionate-programmer</id>
    <content type="html"><![CDATA[<h5>de Chad Fowler</h5>

<p><img class="left" src="http://chadfowler.com/images/books/passionate-programmer.jpg" width="200" height="300" title="The passionate programmer" ></p>

<h2>Por qué lo he leído</h2>

<p>Suelo elegir los libros por el título, por lo que me sugiera. Y el título de
este libro me sugiere todo: pasión y programación. ¿Qué más se puede pedir?.
Uno de mis libros favoritos es <a href="https://pragprog.com/book/tpp/the-pragmatic-programmer">The pragmatic programmer</a>, que más adelante
dió lugar a una editorial de libros técnicos. <em>The passionate programmer</em> tenía
la misma pinta, así que seguro que lo tenía que leer, tarde o temprano.</p>

<!-- more -->


<h2>Qué esperaba</h2>

<p>Me esperaba un libro con una estructura parecida a <em>The pragmatic programmer</em>,
con capítulos cortos, y cada capítulo finalizando con una serie de posibles
acciones para mejorar en tu carrera profesional. Bueno, esta vez, en lugar de
mejorar, esperaba que estuviera relacionado con sentir la pasión por la
programación.</p>

<h2>Qué encontre</h2>

<p>El libro está organizado en 5 grandes secciones:</p>

<ol>
<li>Elige tu mercado</li>
<li>Invierte en tu producto</li>
<li>Ejecución</li>
<li>El marketing... no es sólo para los trajeados</li>
<li>Manteniéndote al día</li>
</ol>


<p>Cada uno de ellos está dividido en capítulos más pequeños (lo que me
imaginaba), y cada uno de ellos termina en uno o varios consejos para que
aprendas el concepto que desarrolla el capítulo. Idéntica estructura a <em>The
pragmatic programmer</em> que tanto me gustó y tanto me ayudó.</p>

<p>Cada una de las secciones anteriores explorar un aspecto de la carrera de un
profesional del desarrollo software, aunque no cubre todos. Guía al lector
sobre cómo y por qué debe elegir un mercado, una industria, ya que el software
se encuentra en todas partes hoy en día. Hay consejos sobre cómo deberías
trabajar, qué actitud deberías tener, tanto si trabajas por cuenta ajena como
por tu propia cuenta y también cómo poder <em>venderte</em> dentro y fuera de tu
empresa.</p>

<h2>Conclusiones</h2>

<p>Me parece un libro muy recomendable. Está enfocado al desarrollo del software,
pero podría ser aplicable (más o menos) a otras profesiones. De lo que trata es
de buscar la pasión por lo que haces.</p>

<p>Cada capítulo termina con una o varias acciones a tomar, algunas son sencillas,
otras te llevarán cierto tiempo, otras son arriesgadas y no todo el mundo se
sentiría cómodo llevándolas a cabo. No creo que tenga tiempo ni energía para
llevarlas todas a cabo, pero sí que me gustaría poner en práctica algunas de
ellas: comunicarme más con gente de negocio, ponerme en situaciones donde yo
sea el <em>peor</em>, invertir en mi conocimiento, encontrar un mentor, seguir alguno
de los consejos para contribuir a algún proyecto de software libre,...</p>

<p>Creo que este es un libro para tener al lado de <em>The pragmatic programmer</em> y
releerlos de vez en cuando.</p>

<h2>Qué he aprendido</h2>

<blockquote><p>No puedes competir en precio, pero puedes competir en habilidad.</p></blockquote>

<!-- para separar quotes -->


<blockquote><p>Tienes que ser apasionado sobre tu trabajo si quieres ser excelente
en tu trabajo.</p></blockquote>

<!-- para separar quotes -->


<blockquote><p>Un aprendiz no se encuentra saliendo por ahí y declarándote un <em>gurú</em>, si no
acumulando conocimiento y teniendo la voluntad y paciencia para compartirlo.</p></blockquote>

<!-- para separar quotes -->


<blockquote><p>Es mucho más fácil encontrar alguien que haga que el software funciona que
encontrar a alguien que haga que funcione el <em>hacer software</em> (It’s much
easier to find someone who can make software work than it is to find someone
who can make the making of software work).</p></blockquote>

<!-- para separar quotes -->


<blockquote><p>Crea movimiento. Se de los que empujan hacia adelante. No te acomodes.</p></blockquote>

<!-- para separar quotes -->


<blockquote><p>La mayor barrera entre nosotros, los mortales, y aquellos a los que admiramos
son nuestros propios miedos.</p></blockquote>

<!-- para separar quotes -->


<blockquote><p>El proceso aquí descrito es un bucle que se repite hasta que te jubilas:
investiga, invierte, ejecuta, anúncialo, repite.</p></blockquote>

<h2>Frases que me gustaría recordar</h2>

<blockquote><p>At least when starting out, greatness is binary in the music world. A
musician wants to either be great (and famous for it!) or not do it at all.
I’m often asked why it is that there are so many good musicians who are also
good software developers. That’s the reason.</p></blockquote>

<!-- para separar quotes -->


<blockquote><p>Think of your career as if it is the life cycle of a product that you are
creating. That product is made up of you and your skills.</p></blockquote>

<!-- para separar quotes -->


<blockquote><p>If you want to stay relevant, you’re going to have to dive into the domain of
the business you’re in.</p></blockquote>

<!-- para separar quotes -->


<blockquote><p>Legendary jazz guitarist Pat Metheny: “Always be the worst guy in every band
you’re in.”</p></blockquote>

<!-- para separar quotes -->


<blockquote><p>Fear-driven advice is geared toward not losing. Thinking about not losing is
not the way to win!</p></blockquote>

<!-- para separar quotes -->


<blockquote><p>Teaching is one of the best ways to learn.</p></blockquote>

<!-- para separar quotes -->


<blockquote><p>Cuando estudias soluciones de código abierto, en lugar de propietarias, en
profundidad empiezas a reconocer patrones que te sirven más allá de la
tecnología.</p></blockquote>

<!-- para separar quotes -->


<blockquote><p>The most obvious place to start your lifelong learning is in learning the
tools of your trade.</p></blockquote>

<!-- para separar quotes -->


<blockquote><p>Without a role model, there’s no incentive to get better.</p></blockquote>

<!-- para separar quotes -->


<blockquote><p>You have to make time for practice. It’s your responsibility.</p></blockquote>

<!-- para separar quotes -->


<blockquote><p>Studying the work of masters is an essential part of becoming a master.</p></blockquote>

<!-- para separar quotes -->


<blockquote><p>I learned that no matter how cool the technology seemed to be, it was
valuable only if it solved a real problem that was urgent and provided
quantifiable benefits. Over time, this helped me change my way of thinking
from being technology-centric to being solution-centric.</p></blockquote>

<!-- para separar quotes -->


<blockquote><p>Attempting to be irreplaceable is a defensive maneuver that creates a hostile
relationship with your employer.</p></blockquote>

<!-- para separar quotes -->


<blockquote><p>We judge each other on how we deal with those inevitable mistakes.</p></blockquote>

<!-- para separar quotes -->


<blockquote><p>If you don’t have a deadline, you don’t have any pressure or much incentive
to finish something.</p></blockquote>

<!-- para separar quotes -->


<blockquote><p>There is no way to objectively measure the quality of a knowledge worker, and
there is no way to objectively measure the quality of their work. That means
you are always going to be measured based on someone else’s perception of
you.</p></blockquote>

<!-- para separar quotes -->


<blockquote><p>You need to make it personal. Try to actually learn about the people you work
with.</p></blockquote>

<!-- para separar quotes -->


<blockquote><p>Set big goals, but make constant corrections along the way. Learn from the
experience, and change the goals as you go.</p></blockquote>

<!-- para separar quotes -->


<blockquote><p>Software development is both challenging and rewarding. It’s creative like an
art-form, but (unlike art) it provides concrete, measurable value.</p></blockquote>

<h2>Recursos relacionados</h2>

<ul>
<li><a href="https://github.com/rchavarria/blog-post-incubator/blob/master/published-book-notes/passionate-programmer-by-chad-fowler.markdown">Notas tomadas sobre el libro</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JavaScript patterns]]></title>
    <link href="http://rchavarria.github.io/blog/2015/07/19/javascript-patterns/"/>
    <updated>2015-07-19T21:10:00+02:00</updated>
    <id>http://rchavarria.github.io/blog/2015/07/19/javascript-patterns</id>
    <content type="html"><![CDATA[<h5>de Stoyan Stefanov</h5>

<p><img class="left" src="http://akamaicovers.oreilly.com/images/9780596806767/lrg.jpg" width="250" height="328" title="JavaScript patterns" ></p>

<h2>Por qué lo he leído</h2>

<p>Cuando leí <a href="/blog/2015/05/29/learning-javascript-design-patterns/">Learning JavaScript design patterns</a>, de Addy Osmany, me quedé con
ganas de más, me equivoqué de libro. El que realmente quería leerme para
aprender sobre patrones en JavaScript era éste. Pero me dejé llevar por la
<em>fama</em> de Addy.</p>

<p>El objetivo de leer estos dos libros era el de profundizar en el uso de patrones
en JavaScript, poder trasladar conocimientos adquiridos en Java, a JavaScript.</p>

<!-- more -->


<h2>Qué esperaba</h2>

<p>Esperaba que fuera un libro muy parecido al mítico <a href="http://www.amazon.com/Design-Patterns-Elements-Reusable-Object-Oriented-ebook/dp/B000SEIBB8">Design patterns</a>, como si
fuera un catálogo de patrones disponibles, con sus descripciones, situaciones
donde es recomendable usarlos y también, por qué no, ejemplos de proyectos
reales.</p>

<h2>Qué encontré</h2>

<p>Por supuesto, encontré muchos patrones, pero eso no es lo más llamativo.</p>

<p>El autor comenta varios aspectos del lenguaje que son cuanto menos, curiosos. No
sé si llegan al nivel de <a href="http://www.amazon.com/JavaScript-Good-Parts-Douglas-Crockford/dp/0596517742">JavaScript, the good parts</a>, pero deben de andar
cerca.</p>

<p>Además, alguno de los patrones difieren de la idea que yo tenía, son muy
distintos a patrones con el mismo nombre, pero en otros lenguajes de
programación.</p>

<h2>Conclusiones</h2>

<p>Junto con <a href="http://www.amazon.com/JavaScript-Good-Parts-Douglas-Crockford/dp/0596517742">JavaScript, the good parts</a>, considero que éste es un libro imprescindible
para cualquier desarrollador que quiera dominar el lenguaje.</p>

<p>Explica en profundidad algunos de los patrones más usados en todo tipo de
proyectos. Quizá, con el nuevo estándard recién aprobado, algunos de ellos
(como la <em>herencia por prototipos</em>) queden algo obsoletos, creo que es
un libro imprescindible para entender el lenguaje.</p>

<h2>Qué he aprendido</h2>

<p>Puedes consultar mis <a href="https://github.com/rchavarria/blog-post-incubator/blob/master/published-book-notes/javascript-patterns-by-stoyan-stefanov.markdown">notas sobre el libro</a> si quieres ver todo lo que me
ha llamado la atención de el mismo. Pero destacaría lo siguiente:</p>

<ul>
<li>Una regla que se repite en muchos patrones: <strong>los miembros a compartir deben
ir en el prototipo, nunca en el <code>this</code></strong></li>
<li>Los constructors implícitamente devuelven <code>this</code>, incluso si no hay un
<code>return</code>, pero tu puedes devolver lo que quieras, incluso puedes redefinir el
constructor. Esto se hace, por ejemplo, en el patrón Singleton</li>
<li>En la declaración de una función, su definición también sufre <em>hoisting</em>, no
solo la declaración</li>
<li>Métodos clásicos de herencia y herencia de prototipos, aunque esto vaya a
cambiar con nuevas versiones del lenguaje, con la aparición de clases</li>
<li>Unas cuantas sugerencias para desplegar grandes aplicaciones: combinar scripts,
minificarlos, utilizar compresión de archivos, uso de cabeceras HTML, uso de
CDNs, dónde situar las etiquetas <code>&lt;script&gt;</code>, enviar en trozos grandes ficheros
HTML.</li>
</ul>


<h2>Recursos relacionados</h2>

<ul>
<li><a href="https://github.com/rchavarria/blog-post-incubator/blob/master/published-book-notes/javascript-patterns-by-stoyan-stefanov.markdown">notas sobre el libro</a></li>
<li><a href="/blog/2015/05/29/learning-javascript-design-patterns/">Learning JavaScript design patterns</a>, libro de Addy Osmany</li>
<li><a href="http://www.amazon.com/Design-Patterns-Elements-Reusable-Object-Oriented-ebook/dp/B000SEIBB8">Design patterns</a>, libro de The Gang of Four</li>
<li><a href="http://www.amazon.com/JavaScript-Good-Parts-Douglas-Crockford/dp/0596517742">JavaScript, the good parts</a>, libro de Douglas Crockford</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Learning JavaScript design patterns]]></title>
    <link href="http://rchavarria.github.io/blog/2015/05/29/learning-javascript-design-patterns/"/>
    <updated>2015-05-29T01:04:00+02:00</updated>
    <id>http://rchavarria.github.io/blog/2015/05/29/learning-javascript-design-patterns</id>
    <content type="html"><![CDATA[<h5>de Addy Osmany</h5>

<h2>Por qué lo he leído</h2>

<p><img class="left" src="http://www.addyosmani.com/resources/essentialjsdesignpatterns/cover/cover.jpg" width="206" height="271" title="JavaScript desing patterns" ></p>

<p>Ya llevo un tiempo programando con JavaScript de forma profesional, y empiezo
a sentir que necesito ir un paso más allá con el lenguaje. No creo que conozca
todo lo que ofrece el lenguaje, todo lo contrario, a veces siento que me queda
mucho por aprender y que necesito profundizar en muchos y muchos temas. Con
este libro pretendía trasladar mis conocimientos sobre patrones de diseño con
Java a JavaScript.</p>

<!-- more -->


<h2>Qué esperaba</h2>

<p>Esperaba grandes cosas de este libro. Ya tenía referencias anteriores del autor,
creo que es un profesional como la copa de un pino. Así que un libro escrito
por él, pues tenía buena pinta.</p>

<p>Supongo que esperar encontrar una estructura de libro muy parecido a otros:
clasificaciones, descripciones, catalogaciones,...</p>

<h2>Qué encontré</h2>

<p>Encontré un libro con mucho código, cosa que no tiene que ser ni bueno, ni malo.
En el caso de este libro, es una ayuda muy buena. Las explicaciones de Addy son
clarísimas y hay multitud de ejemplos y casos reales.</p>

<h2>Conclusiones</h2>

<p>Aunque es un libro que no miente, trata sobre patrones de diseño, el libro me
ha defraudado un poco. Esperaba más del autor. Quizá no he sabido aprovechar
el contenido del libro, pero me ha parecido superficial en algunos capítulos,
y en otros ha entrado a describir con mucho detalle librerías como jQuery o
plugins para él.</p>

<p>En realidad, el libro que andaba buscando era <a href="http://www.amazon.com/JavaScript-Patterns-Stoyan-Stefanov/dp/0596806752">JavaScript patterns</a>, de
Stoyan Stefanov, pero me daba más confianza Addy porque era un autor que ya
conocía. Toca ponerle remedio y ya me he puesto con el libro de Stoyan.</p>

<p>Eso sí, tengo que reconocer que es el primer lugar donde he encontrado una buena
descripción de lo que son cada una de las arquitecturas MVx (MVC, MVP, MVVM,...)</p>

<h2>Qué he aprendido</h2>

<ul>
<li>Se pueden añadir propiedades a objetos a través del método
<code>Object.defineProperties()</code></li>
<li>Los métodos de un objeto, no se deben declarar en la función constructor, sino
modificando el prototipo de la misma</li>
<li>Se debe intentar conseguir un bajo acoplamiento, algunos patrones (Observer,
Mediator,...) ayudan a ello</li>
<li>Mixins</li>
<li>Patrón Flyweight, consiste en agrupar o manejar conjuntamente funcionalidades
que pueden compartir un subconjunto de sus datos</li>
<li><p>Diferencias entre los distintos MVx</p>

<ul>
<li>En MVC, las Vistas tienen acceso directo al Modelo</li>
<li>En MVP, los Presentadores escuchan eventos de la Vista y del Modelo y median en la acciones entre ellos</li>
<li>MVVM nos permite crear partes específicas de las Vistas de un Modelo en concreto</li>
</ul>
</li>
<li><p>Expresiones de Función Inmediatamente Invocadas (IIFE - Immediately-Invoked Function Expressions)</p></li>
</ul>


<h2>Recursos relacionados</h2>

<ul>
<li><a href="http://www.addyosmani.com/resources/essentialjsdesignpatterns/book">Learning JavaScript design patterns</a>, by Addy Osmani</li>
<li><a href="http://www.2ality.com/2014/09/es6-modules-final.html">Sintaxis definitiva de módulos</a></li>
<li><a href="https://github.com/rchavarria/blog-post-incubator/blob/master/published-book-notes/learning-javascript-design-patterns-by-addy-oshmany.markdown">Notas tomadas</a></li>
<li><a href="http://www.amazon.com/JavaScript-Patterns-Stoyan-Stefanov/dp/0596806752">JavaScript patterns</a>, de Stoyan Stefanov</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Stop stealing dreams]]></title>
    <link href="http://rchavarria.github.io/blog/2015/03/13/stop-stealing-dreams/"/>
    <updated>2015-03-13T00:39:00+01:00</updated>
    <id>http://rchavarria.github.io/blog/2015/03/13/stop-stealing-dreams</id>
    <content type="html"><![CDATA[<h5>de Seth Godin</h5>

<h2>Por qué lo he leído</h2>

<p><img class="right" src="http://s1.hubimg.com/u/11789820_f260.jpg" width="200" height="300" title="Stop stealing dreams" ></p>

<p>Decidí leerlo básicamente porque tengo un hijo. Empezó el <em>colegio de mayores</em>
el pasado mes de septiembre, y desde un tiempo atrás ya me empezó a preocupar
el tema de su educación.</p>

<p>Y la verdad, con todos las reformas que ha sufrido la educación en España en
los últimos años, creo que la calidad de la misma se ha visto bastante reducida.</p>

<p>Por otra parte, he leído algún libro de Seth Godin, y sigo su blog, y creo que
tiene muchas ideas revolucionarias (con otras no estoy muy de acuerdo, o
simplemente no me interesan mucho), pero tenía ganas de saber qué piensa Seth
sobre la educación.</p>

<!-- more -->


<h2>Qué esperaba</h2>

<p>Viniendo de Seth Goding, me esperaba una serie de ideas revolucionarias sobre
cómo educar a los hijos, o consejos sobre cómo comportarse para intentar conseguir
que los pequeños sean más independientes, estén más preparados para un mundo
cambiante, que sean más individuales pero colaborativos.</p>

<h2>Qué encontre</h2>

<p>En parte encontré lo que buscaba, pero gran parte del libro (o <em>manifiesto</em> como
le llama el autor) está dedicado a criticar el sistema educativo (está centrado
en el norteamericano, pero es extrapolable a otros, por lo menos al
español sí lo es, más o menos), desde primaria hasta la universidad.</p>

<h2>Conclusiones</h2>

<p>Es un libro que no defraudará a ningún padre, y tampoco a ningún profesor de
escuela, instituto o universidad que esté preocupado hacia dónde va la educación.
La idea principal es que la escuela pública, o la educación para la mayoría,
nació como una necesidad de crear obreros, de crear una clase obrera. Pero
ya no existe esa necesidad de la era industrial, ahora las necesidades han
cambiado, y la escuela debe cambiar.</p>

<p>No estoy seguro de si el autor tiene toda la razón en su idea principal, pero
de lo que sí estoy seguro es que existen iniciativas distintas para la educación
(<a href="https://www.khanacademy.org">Khan Academy</a>, <a href="http://online.stanford.edu">Stanford University online</a>, <a href="http://ocw.mit.edu/index.htm">MIT open courses</a>,...) y que pueden ser pioneras
en el cambio que la educación necesita.</p>

<p>Estoy de acuerdo en que el profesor no debería malgastar su tiempo en dar una
clase estándar, para todos igual, si no que cada alumno disponga de toda la
información de la materia a estudiar, haga el progreso a su ritmo, y que el
profesor sea la persona que le guie, le ayude cuando se encuentre en un callejón
sin salida. Sentí algo parecido en la universidad, las clases parecían una
pérdida de tiempo, pero no llegué a ver el problema expuesto por Seth.</p>

<h2>Frases que me gustaría recordar</h2>

<ul>
<li>La educación a gran escala no fue desarrollada para motivar a los niños o para crear eruditos, fue para crear adultos sumisos, trabajadores para líneas de montaje en las fábricas</li>
<li>¿Para qué es la escuela?

<ol>
<li>Para crear una sociedad culturalmente coordinada. La televisión gana</li>
<li>Para llevar más lejos la ciencia y el conocimineto y perseguir la información por placer. Eso está bien, pero luego asociamos leer libros con los exámenes, poca gente lee por el placer de leer y aprender</li>
<li>Para mejorar la civilización mientras le damos a la gente herramientas para tomar decisiones conscientes e informadas. Pero fallamos al elevar los estándares del pensamiento racional, investigación escéptica, y la toma de decisiones financieras de utilidad</li>
<li>Para entrenar a gente en ser trabajadores productivos. Este punto es en el que hemos destacado en los últimos tiempos, según el autor.</li>
</ol>
</li>
<li>Podemos enseñar a la gente a comprometerse, a superar sus miedos, a negociar transarentemente, a iniciar y planificar un curso, a desear tener una vida de contínuo aprendizaje, a expresarse por sí mismos y a innovar. Pero en lugar de eso, hemos hecho que se olviden del coraje, la creatividad y la iniciativa</li>
<li>He aquí 12 formas en las que la escuela puede ser reformada:

<ol>
<li>Deberes por el día, en clase; las clases orales del profesor por la noche, en casa</li>
<li>Libro abierto, cuaderno abierto, todo el tiempo</li>
<li>Acceso a cualquier curso y asignatura, desde cualquier parte del mundo</li>
<li>Instruciones precisas y focalizadas, en lugar de instrucciones generalizadas y en masa</li>
<li>Prohibidos exámenes tipo test</li>
<li>Experiencias en lugar de notas en los examenes como medida de logros</li>
<li>Dejemos de medir como un resultado la obediencia (el silencio, el aceptar las cosas porque sí)</li>
<li>Cooperacion en lugar de aislamiento (en lugar de aislar estudiantes, deberiamos conectarlos : trabajo en grupo, clases intractivas, ...)</li>
<li>Amplificacion de los estudiantes sobresalientes, de los profesores y de las ideas</li>
<li>Transformación del rol del profesor</li>
<li>Aprendizaje contínuo, trabajo más temprano</li>
<li>Dejemos de pensar que la universidad famosa, la que tiene fama, es la mejor en cuanto a educación</li>
</ol>
</li>
<li><em>Economía conectada</em>: los estudiantes tienen la habilidad y la facilidad de investigar lo que hay fuera y descubrir que el profesor (o libro de texto) está equivocado</li>
<li>El atajo para alcanzar el objetivo de las escuelas (crear ciudadanos sumisos) es el <strong>miedo</strong>. Haz esto y ..., "se lo diremos a tus padres", "o te suspenderemos",...</li>
<li>El atrevimiento (a probar cosas nuevas, a salirse del guión) en la escuela está castigado, no recompensado</li>
<li>Tener habilidades que escasean combinadas con actitudes aún más escasas casi siempre llevan a un desempleo bajo y altos salarios</li>
<li>Solía ser sencillo: el profesor era el policía, el maestro, la fuente de todas las respuestas y el guardián de los recursos. Ahora, no necesitamos un humano a nuestro lado para enseñarnos como buscar la raiz cuadrada de un número, o cómo afilar un hacha. Lo que necesitamos es alguien que nos convenza de que queremos aprender esas cosas</li>
<li>Estamos entrando en una revolución de ideas mientras producimos una generación que, en lugar de ideas, lo que quiere son instrucciones</li>
<li>¿Es muy peligroso hacer lo correcto? ¿Pueden los padres hacerlo bien? ¿Porqué debería la escuela hacer ese trabajo y no los padres? Lo que importa es que buscar un camino que <em>podría</em> ser mejor es demasiado riesgo para alquien que sólo tiene una oportunidad de educar a sus hijos correctamente</li>
<li>La única forma para un estudiante de obtener respeto en la escuela es ganarse la aprovación temporal de un profesor al que probablemente no volverá a ver en un futuro cercano. Si el profesor es temperamental, inconsistente, mal profesor, el estudiante está obligado a aguantarle. ¿No te parece que debe ser muy frustrante tener que contentar a alquien a quien no vas a volver a ver en la vida?</li>
<li>Lo que se necesita de los profesores no es dar cuantas más clases mejor, o corregir exámenes o gestionar una clase de estudiantes. Lo que se necesita es una atención individualizada, trabajo emocional y la habilidad de motivar</li>
<li>Debemos tener en cuenta que no hay que valorar simplemente la habilidad, porque el niño mayor tiene ventaja, hay que valorar pasión, los sueños del niño</li>
<li>Debemos inculcar a los niños la pasión por leer</li>
<li>La universidad proporciona 4 cosas:

<ol>
<li>Acceso a la información. Pero ya tenemos acceso online, por lo que no necesitamos a la universidad para esto</li>
<li>Acreditación o un título (que antes era escaso). Pero ahora todo el mundo puede tener un título</li>
<li>Membresía a una tribu. Esta es quizá la mejor razón por la que mudarse a un campus universitario para conseguir una carrera</li>
<li>Una situación para el crecimiento y desarrollo. Ésta sería la razón por la que elegir la universidad, porque es imposible de imitar en una experiencia online. La universidad adecuada es la última y mejor oportunidad para multitud de adolescentes de encontrarse a sí mismos en situaciones donde no hay otra opción nada más que la de crecer, y rápido</li>
</ol>
</li>
<li><strong>¿Qué enseñamos?</strong>:

<ol>
<li>Cuando enseñamos a un niño a tomar buenas decisiones, nos beneficiamos de una vida llena de buenas decisiones</li>
<li>Cuando enseñamos a un niño a amar el aprendizaje, la cantidad de aprendizaje se volverá ilimitada</li>
<li>Cuando enseñamos a un niño a lidiar con un mundo cambiante, nunca se quedará obsoleto</li>
<li>Cuando somos lo suficientemente valientes como para enseñar a un niño que cuestione la autoridad, incluso la nuestra, nos protegemos a nosotros mismos de quien usaría su autoridad en contra de cada uno de nosotros</li>
<li>Y cuando le damos a los estudiantes el deseo de hacer cosas, aunque sean elecciones, creamos un mundo repleto de gente que consigue crear e inventar cosas</li>
</ol>
</li>
</ul>


<h2>Recursos relacionados</h2>

<ul>
<li><a href="https://github.com/rchavarria/book-notes/tree/master/published/stop-stealing-dreams-by-seth-godin.md">Notas extendidas sobre el libro</a></li>
<li><a href="https://www.khanacademy.org">Khan Academy</a></li>
<li><a href="http://online.stanford.edu">Stanford University online</a></li>
<li><a href="http://ocw.mit.edu/index.htm">MIT open courses</a></li>
</ul>

]]></content>
  </entry>
  
</feed>

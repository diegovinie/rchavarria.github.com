<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: javascript | R. Chavarria's Blog]]></title>
  <link href="http://rchavarria.github.io/blog/categories/javascript/atom.xml" rel="self"/>
  <link href="http://rchavarria.github.io/"/>
  <updated>2013-09-29T16:17:03+02:00</updated>
  <id>http://rchavarria.github.io/</id>
  <author>
    <name><![CDATA[Rub&eacute;n Chavarr&iacute;a]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[solveet: Torres de Hannoi]]></title>
    <link href="http://rchavarria.github.io/blog/2012/12/12/solveet-torres-de-hannoi/"/>
    <updated>2012-12-12T09:35:00+01:00</updated>
    <id>http://rchavarria.github.io/blog/2012/12/12/solveet-torres-de-hannoi</id>
    <content type="html"><![CDATA[<p>Simplemente para practicar y mejorar mis habilidades como programador, me gusta resolver problemas
de programación regularmente. Hace un tiempo conocí la página <a href="http://solveet.com">Solveet</a>, y desde
entonces intento aportar semanalmente alguna que otra solución a los problemas propuestos por otros
profesionales del desarrollo software.</p>

<p><img class="right" src="http://upload.wikimedia.org/wikipedia/commons/6/60/Tower_of_Hanoi_4.gif" width="320" height="125" title="By André Karwath aka Aka, Own work, CC-BY-SA-2.5, via Wikimedia Commons" ></p>

<p>El problema que he solucionado esta semana es el de las
<a href="http://www.solveet.com/exercises/Torres-de-Hannoi/72">Torres de Hannoi</a>, todo un clásico en el
desarrollo software, y en este post intento describir detalladamente cómo he llegado a mi solución.</p>

<!-- more -->


<h2>Introducción</h2>

<p>El punto de partida ha sido esta entrada en la wikipedia acerca de las
<a href="http://es.wikipedia.org/wiki/Torres_de_Han%C3%B3i">Torres de Hannoi</a> donde explica de una forma muy
básica la forma de solucionarlo. Ahora sólo hay que implementarlo.</p>

<p>Decidí solucionar el problema en javascript, para aprender más sobre este lenguaje, y decidí solucionar
el problema de forma iterativa, ya que me pareció más sencilla que la forma recursiva. Y ya que estoy
practicando, intenté llegar a la solución definitiva practicando TDD.</p>

<p>Puedes ver mi solución publicada en <a href="http://www.solveet.com/exercises/Torres-de-Hannoi/72/solution-1051">solveet</a>,
así como el código completo de la solución y los tests en este repositorio de
<a href="https://github.com/rchavarria/solveet-problems/tree/master/hannoi-js">github</a>.</p>

<h2>Manos a la obra</h2>

<p>La parte más fácil es mover el anillo más pequeño. Éste hay que moverlo siempre en los pasos impares,
y siguiendo siempre un de estas dos secuencias:</p>

<ul>
<li>Si el número de anillos es impar, hay que moverlo a las siguientes torres o varillas:
destino -> auxiliar -> origen, y así indefinidamente</li>
<li>Si el número de anillos es par, la secuencia será: auxiliar -> destino -> origen, ...</li>
</ul>


<h2>Movimientos en los pasos pares</h2>

<p>En los pasos pares hay que mover los anillos que no son el anillo más pequeño. El anillo a mover dependerá
del número de anillos de los que conste el problema.</p>

<p>Al utilizar TDD, he ido descubriendo poco a poco cómo escoger el anillo a mover y dónde moverlo:</p>

<ul>
<li>1 anillo: no hace falta mover otros anillos ya que con un movimiento está solucionado.</li>
<li>2 anillos: solo es posible mover el anillo más grande a la torre destino, ya que el anillo más pequeño lo
habremos movido en el primer movimiento a la torre auxiliar.</li>
<li>3 anillos: desarrollando manualmente todos los movimientos, el anillo a mover es aquel que no está en la
torre destino y que tampoco es el anillo más pequeño.</li>
<li>4 anillos: desarrollando otra vez manualmente todos los movimientos, el anillo a mover es el menor anillo
(sin ser el más pequeño) y se deberá mover a la única torre posible. Esta torre la sabremos porque es aquella
torre que no contiene ni el anillo más pequeño ni el anillo a mover.</li>
</ul>


<p>A partir de los 4 anillos, la solución ya funciona con cualquier número de anillos.</p>

<h4>Reconocimientos</h4>

<ul>
<li>Imagen By André Karwath aka Aka (Own work) <a href="http://creativecommons.org/licenses/by-sa/2.5">CC-BY-SA-2.5</a>, via <a href="http://commons.wikimedia.org/wiki/File%3ATower_of_Hanoi_4.gif">Wikimedia Commons</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Proyecto maven para javascript]]></title>
    <link href="http://rchavarria.github.io/blog/2012/09/26/proyecto-maven-para-javascript/"/>
    <updated>2012-09-26T09:26:00+02:00</updated>
    <id>http://rchavarria.github.io/blog/2012/09/26/proyecto-maven-para-javascript</id>
    <content type="html"><![CDATA[<p>Estoy aprendiendo JavaScript. Creo que es uno de los lenguajes con más futuro, y no sólo por la web (que da de comer a mucha gente), sino por herramientas como <a href="http://phonegap.com/">PhoneGap</a> (que te permite crear aplicaciones para iOS, Android, ...), y también por la llegada del nuevo Windows 8, ya que se pueden desarrollar aplicaciones en JavaScript que acceden al hardware de la máquina donde esté instalado Windows 8.</p>

<p>Empecé aprendiéndolo gracias a <a href="http://www.codecademy.com/">Codecademy</a>, que comenzó el año con unos cursos o clases online, y me llamó mucho la atención la posibilidad de poder ir practicando JavaScript sin tener que instalar nada. Y además, cada semana la herramienta me recordaría que tenía una nueva lección, así no dejaría de practicar.</p>

<!-- more -->


<p>Pero hace poco tropecé con un pequeño problema, y es que quería aportar una solución escrita en JavaScript al desafío de <a href="http://www.solveet.com/exercises/Compresion-RLE/35">Compresión en RLE</a> en <a href="http://www.solveet.com/">Solveet </a>(una plataforma donde la gente publica desafíos de programación y otra gente publica sus propias soluciones, muy recomendable y divertido). El problema era que no tenía instalado nada en mi ordenador que me permitiera hacer <a href="http://es.wikipedia.org/wiki/Desarrollo_guiado_por_pruebas">TDD </a>(lo prefiero para resolver los desafíos, así practico doble: el desafío y la práctica TDD).</p>

<p>Una herramienta que me encanta para gestionar el ciclo de vida de mis proyectos es <a href="maven.apache.org">maven</a>, así que me decidí a buscar algo que me permitiera escribir JavaScript y luego ejecutarlo con comandos de maven.</p>

<p>Y tuve la suerte de encontrar un post de <a href="http://blog.akquinet.de/">akquinet </a>donde explica <a href="http://blog.akquinet.de/2011/02/11/mavenizing-javascript-projects/">cómo crear un proyecto maven para JavaScript</a>. La verdad es que es realmente sencillo porque akquinet se ha currado un archetype para maven que te crea un esqueleto de proyecto para que escribas directamente JavaScript. Simplemente con este comando para ejecutar maven:</p>

<p>[sourcecode language="bash"]
mvn archetype:generate \
  -DarchetypeArtifactId=javascript-quickstart \
  -DarchetypeGroupId=de.akquinet.javascript.archetypes \
  -DarchetypeVersion=1.0.0 \
  -DgroupId=<enter your groupId> \
  -DartifactId=<enter your artifactId>
[/sourcecode]</p>

<p>Con el proyecto creado a partir del archetype de akquinet podrás:</p>

<ul>
    <li>Ejecutar tus tests JavaScript con <a href="http://pivotal.github.com/jasmine/">Jasmine</a></li>
    <li>Comprimir los ficheros .js y .css de tu proyecto</li>
    <li>Generar la documentación con <a href="www.jslint.com/">Jslint</a> y <a href="http://code.google.com/p/jsdoc-toolkit/">Jsdoc</a></li>
</ul>


<p>Además, al ser un proyecto maven, es muy fácil que lo integres en un servidor de <a href="http://es.wikipedia.org/wiki/Integraci%C3%B3n_continua">Integración Contínua</a> como <a href="http://hudson.dev.java.net/">Hudson</a>.</p>

<p>Si quieres, puedes ver la solución que aporté en Solveet. El desafío es muy sencillo, y hay muy poco código JavaScript: <a href="http://www.solveet.com/exercises/Compresion-RLE/35/solution-846">Compresión RLE en JavaScript</a>, el <a href="https://github.com/rchavarria/solveet-problems/tree/master/rle-compression-javascript">código completo con los tests</a>.</p>
]]></content>
  </entry>
  
</feed>

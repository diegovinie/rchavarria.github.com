<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: events | R. Chavarria's Blog]]></title>
  <link href="http://rchavarria.github.io/blog/categories/events/atom.xml" rel="self"/>
  <link href="http://rchavarria.github.io/"/>
  <updated>2016-03-20T15:54:15+01:00</updated>
  <id>http://rchavarria.github.io/</id>
  <author>
    <name><![CDATA[Rub&eacute;n Chavarr&iacute;a]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Mi CAS 2015]]></title>
    <link href="http://rchavarria.github.io/blog/2015/12/13/mi-cas-2015/"/>
    <updated>2015-12-13T21:48:00+01:00</updated>
    <id>http://rchavarria.github.io/blog/2015/12/13/mi-cas-2015</id>
    <content type="html"><![CDATA[<p>Me quedé sin chapa. Sin chapa de "Mi primera CAS". Conocí a varias personas que
la llevaban orgullosos. Espero que para ellos significara lo mismo que
significó para mí <a href="/blog/2012/11/08/mi-experiencia-en-la-cas2012/">mi primera CAS</a>.</p>

<p>Ésta, como aquella, ha sido una gran experiencia. La de este año ha sido
enooorme, comparada con la de Cáceres. Hemos asistido más de 700 personas. Ha
tenido que ser un trabajo monumental organizarla, así que desde aquí mis
agradecimientos y admiración a todos los que la han hecho posible:
organizadores, patrocinadores y voluntarios. Olé!</p>

<!-- more -->


<p>La conferencia fueron dos intensos días llenos de charlas interesantísimas. Dos
días que saben a poco. Sobretodo porque no he podido disfrutar de las cañas de
después, o las quedadas fuera del evento. Y también porque, a pesar de que
todos los asistentes estuviéramos en la misma sala para tomar café y comer, me
ha resultado imposible entablar conversaciones con todas las personas que
quería. ¡Agotador! Pero muy motivador a la vez.</p>

<p>Sigamos con las charlas a las que asistí, y qué me llevé de ellas:</p>

<h2><a href="http://www.slideshare.net/carlosble/cas2015-opening-improving-the-software">Apertura</a>, <a href="https://twitter.com/carlosble">Carlos Blé</a></h2>

<p>Carlos habló de la necesidad de hablar inglés, no porque sí, si no para
aprender de las fuentes. También habló de la importancia de hablar otro
lenguaje, extraño para los desarrolladores, el de negocio. De esta forma nos
entenderemos mejor ambas partes. Fue una charla muy inspiradora, fenommenal
como apertura. Me quedaría con la frase:</p>

<blockquote><p>Tú eres el único responsable de tu carrera</p></blockquote>

<h2><a href="https://www.youtube.com/watch?v=C6Sy0v19RAc&amp;t=2h14m00s">Your application is not your framework</a>, de <a href="https://twitter.com/ecomba">Enrique Comba</a></h2>

<p>¿Por qué cuando te preguntan por tu applicación dices qué framework estás
usando? Habla sobre qué hace de verdad tu aplicación. Enrique habló de muchos
conceptos alrededor de los frameworks: <em>convention over configuration</em>, mezcla
de lógica de negocio con la lógica impuesta por el framework. ¿Qué beneficios
trae separar la lógica de tu aplicación del framework? Separación de
responsabilidades, velocidad en los tests automáticos y sobretodo claridad en
el <strong>propósito</strong> y <strong>estructura</strong> de tu aplicación.</p>

<h2><a href="http://www.slideshare.net/PeterMarshall10/pete-marshall-casmadrid2015-continuous-delivery-in-legacy-environments">Continuous delivery</a>, de <a href="https://twitter.com/petemar5hall">Peter Marshal</a></h2>

<p>Peter compartió su experiencia en llevar a un equipo desde el desarrollo de una
aplicación <em>a la vieja usanza</em> hasta alcanzar puestas en producción diarias. En
las slides de la presentación encontrarás multitud de consejos para llevarlo a
cabo, pero yo me quedaría con estos conceptos o enseñanzas:</p>

<ul>
<li>La entrega contínua es enfocarse en la excelencia técnica</li>
<li>Conforme avanza el tiempo, el mayor problema de las aplicaciones con
problemas es que los bugs aumentan mientras que las funcionalidades
desplegadas disminuyen.</li>
<li>La clave está en la simplicidad</li>
<li>Lleva su tiempo madurar (equipo, producto, compañía,...)</li>
</ul>


<h2><a href="http://cas2015.agile-spain.org/charlas/">Building resilient integrations</a>, de <a href="https://twitter.com/cuvuligio">Dave Moore</a></h2>

<p>Esta charla tuvo su parte teórica y su parte práctica. De la parte teórica,
decir que debemos entender que los fallos están en todas partes, por lo que es
nuestro trabajo hacer software que no falle, que sea tolerante a fallos de
sistemas externos. Algunas técnicas para hacerlo podrían ser: tests automáticos
(no mienten, la documentación sí), aislar integraciones que herramientas de
terceros (creando interfaces que las separen de nuestra applicación), utilizar
nuestro propio modelo de datos, política de reintentos de conexión,...</p>

<p>En el taller de después tuvimos la oportunidad de poner todo esto en prática.
Un taller super divertido.</p>

<h2><a href="http://es.slideshare.net/juanignaciosl/continuous-integration-at-cartodb">Continuous integration in CartoBD</a>, de <a href="https://twitter.com/juanignaciosl">Juan Ignacio Sánchez</a></h2>

<p>Juan Ignacio empezó fuerte, comentando que, aunque hay millones de
herramientas, es el <strong>equipo</strong> quien realmente puede hacer que la integración,
entrega y despliegue contínuo funcionen.</p>

<p>¿Cómo lo hacen en CartoDB? Planeándolo desde antes que la gente entre a
trabajar con ellos, despligando desde el primer día, planes iterativos e
incrementales, tests, code reviews, pull requests, feature toggles, pequeñas
releases a grupos controlados de usuarios (canary releases), posibilidad de
hacer rollback rápidamente (pequeños despliegues llevan a que esto sea
posible), análisis post-mortem de grandes fallos, mucha instrumentación y
monitorización.</p>

<h2><a href="http://www.slideshare.net/lantoli/believe-it-or-not-keynote-cas-2015-55802209">Keynote técnica</a>, de <a href="https://twitter.com/lantoli">Leo Antolí</a></h2>

<p>Leo hizo incapié en lo más profundo de agile y lean: no te creas lo que te
cuenten, pruébalo y si te funciona úsalo, si no te funciona, descártalo. Hay
mucho estudios que dicen que una práctica es X veces mejor. Analiza esos
estudios y te darás cuenta de que son humo. Pon en duda el pair programming,
TDD, mejoras en productividad, code dojos, code retreats, craftsmanship, deuda
técnica, tasa de proyectos software fallidos,...</p>

<p>Como buena keynote, lo que me llevo de esta charla son pensamientos, dudas,
cuestiones. Debo entender que el software no es el fin, es un medio para
conseguir un fin. Deja de usar números no probados. Cuenta experiencias propias
(no sirven para demostrar nada, pero son algo real). Y sobretodo, mantén un
<strong>espiritu crítico</strong>.</p>

<h2><a href="https://www.youtube.com/watch?v=_CcO9upHiDU&amp;t=9m20s">Keynote viernes</a>, de <a href="https://twitter.com/rachelcdavies">Rachel Davis</a></h2>

<p>Esta keynote trató de introducir cambios, de introducir tiempo para el
aprendizaje. Debemos crear tiempo para ello a lo largo de nuestra semana. No
tengas prisa en introducir cambios, la gente necesita <strong>tiempo</strong>.</p>

<p>De esta keynote quiero recordar dos consejos de Rachel: comparte lo aprendido
(por ejemplo en esta CAS), invierte tiempo en profundizar en lo aprendido.</p>

<h2><a href="https://medium.com/@borillo/el-modelo-de-desarrollo-mete-saca-be17304ad1df#.b0vwf7ben">Escapando del modelo mete-saca</a>, de <a href="https://twitter.com/borillo">Ricardo Borillo</a></h2>

<p>¿Estamos seguros de que lo que quiere el usuario es un simple sistema CRUD? ¿No
hay una forma de aportar más valor? Un CRUD es muy genérico, seguro que no
resuelve las necesidades del usuario con la mejor eficiencia.</p>

<p>Ricardo analizó qué nos lleva a este modelo: pobres historias de usuario, mal
definidas, que nos llevan a hacer cosas generales; los frameworks (como ORMs);
y arquitecturas de usuario pobres, con componentes maestro-detalle, consumo de
apis REST,... todo esto nos conduce al modelo mete-saca.</p>

<p>La solución propuesta por Ricardo, un único punto de entrada (en contraposición
a los múltiples endpoints REST) con una arquitectura <a href="https://en.wikipedia.org/wiki/Command%E2%80%93query_separation#Command_Query_Responsibility_Segregation">CQRS</a>. Cada <em>comando</em>
correspondería con una acción del usuario, una historia de usuario, un caso de
uso muy específico, que nos conduciría a tener las mínimas funcionalidades
desarrolladas con la máxima eficiencia y la mejor usabilidad para el usuario.</p>

<h2><a href="http://www.slideshare.net/programania/software-economics-tradeoffs-of-decoupled-softwre">Economía del software</a>, de <a href="https://twitter.com/artolamola">Luis Artola</a> y <a href="https://twitter.com/ggalmazor">Guillermo Gutierrez</a></h2>

<p>Luis y Guillermo nos condujeron en un viaje apasionante desde las necesidades
de negocio hasta detalles del código, tales como las dependencias. En el
camino, comentaron multitud de conceptos, de buenas prácticas, hicieron
referencia a charlas de todo el evento (lo que pone de manifiesto lo amplio de
su charla).</p>

<p>Concepto clave: negocio quiere entrega de <strong>valor</strong>, minimizando <strong>costes</strong> y
<strong>riesgos</strong> pero manteniendo <strong>opciones</strong> abiertas. El mayor en el software es
el coste de evolución. Cuanto más difícil sea cambiar algo, más costoso será a
lo largo del tiempo. El desarrollo iterativo e incremental reduce los riestos.
El despliegue de pequeñas funcionalidades, interfaces, inversión de control son
formas de crear opciones.</p>

<h2><a href="http://eamodeorubio.github.io/effective-ui-bdd-with-js/short.html#/">Effective UI testing</a>, de <a href="https://twitter.com/eamodeorubio">Enrique Amodeo</a></h2>

<p>Todo comenzó con el dilema: ¿debo testear cada clase individual o todo el
sistema? Pues ni lo uno, ni lo otro. En cuanto a la interfaz gráfica, la
podríamos dividir en dos dominios: la presentación y la lógica de usabilidad.</p>

<p>¿Como testear cada parte? Para testear la presentación debemos mockear el DOM
del navegador. Para testear la lógica de usabilida, debemos mockear el acceso
al servidor. Basándose en eso, Enrique recomienda seguir dos prácticas:
encapsular los accesos al servidor y los accesos al DOM.</p>

<h2>Trabajo para casa</h2>

<ul>
<li>Parece que integración, entrega y despliegue contínuos son prácticas básicas para empresas exitosas.</li>
<li>Prepara las conferencias a las que asistas: busca el lugar donde se va a
celebrar e imprime un plano de las salas que se van a utilizar, crea una
checklist con las cosas que hacer antes de asistir a un evento. Como por
ejemplo prepar preguntas a hacer a gente interesante que quiero conocer (me
gustó aquello que hiciste/dijiste, discrepo con aquello que ...)</li>
<li>Echar un vistazo a la herramienta Screen Hero</li>
<li>Libro recomendado por Leo Antolí: Pensar rápido, pensar despacio</li>
<li>Libro recomendado por Rachel Davis: Drive (cómo introducir cambios)</li>
<li>Busca slide de Rachel Davis sobre <em>Sources of learning</em></li>
<li>Busca referencia a lo que falta de SOLID: RCCASS</li>
<li>¿Qué es el patrón Page Object?</li>
<li>Slide con las <em>mejores prácticas</em> recomendadas por Enrique Amodeo</li>
</ul>


<h2>Recursos</h2>

<ul>
<li><a href="https://gist.github.com/nhpatt/89f90a27042e4fd1db7b">Charlas, artículos y más sobre la CAS 2015</a></li>
<li><a href="https://www.youtube.com/watch?v=C6Sy0v19RAc">Streaming del día 1</a></li>
<li><a href="https://www.youtube.com/watch?v=_CcO9upHiDU">Streaming del día 2</a></li>
<li><a href="http://martinfowler.com/bliki/CQRS.html">Martin Fowler acerca de CQRS</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mi fracción del Codemotion 2015]]></title>
    <link href="http://rchavarria.github.io/blog/2015/11/29/mi-fraccion-codemotion/"/>
    <updated>2015-11-29T19:09:00+01:00</updated>
    <id>http://rchavarria.github.io/blog/2015/11/29/mi-fraccion-codemotion</id>
    <content type="html"><![CDATA[<p>Por 4º año consecutivo he tenido el placer de asistir a <a href="http://2015.codemotion.es/">Codemotion</a>, un evento
donde todas las comunidades tecnológicas tienen cabida, un evento con más de
2000 asistentes (este año hablan de 2500), con 8 tracks en paralelo mas 4
talleres.</p>

<p>En esta entrada trato de mostrar mi pequeña porción de lo vivido, por lo que no
esperes que coincida con la tuya si has estado allí, y no esperes que coincida
completamente con la realidad, porque lo que aquí leerás es solo una mínima
parte de todo lo ocurrido.</p>

<!-- more -->


<p>En un evento de este calibre no solo hay que valorar las charlas técnicas que
te inspiran, te enseñan y te encienden la chispa de la curiosidad. También hay
que valorar lo que pasa fuera de las charlas. Este año me he centrado más en
las charlas. Aún así, he conocido en persona a <a href="http://ocana.github.io/">Miguel</a>, que ya tenía ganas, y
he vuelto a ver a antiguos amigos de profesión que estamos convirtiendo en
costumbre lo de encontranos cada año en el Codemotion.</p>

<p>Otros años me ha parecido que han asistido más estudiantes, este año, la
impresión que he tenido es que el porcentaje de estudiantes/profesionales ha
estado bastante igualado.</p>

<p>Charlas a las que he asistido:</p>

<h2><a href="http://2015.codemotion.es/agenda.html#5677904553836544/43004005">El arte de ser vago</a>, de <a href="http://cjgaliana.com/">Camilo Galiana</a></h2>

<p>Esta charla fue un calentamiento perfecto. Camilo se expresa perfectamente, y
llevó un ritmo bastante bueno en su charla. Se podría resumir la charla como:</p>

<blockquote><p>Se programa para personas, no para las máquinas</p></blockquote>

<p>Se hizo un repaso de multitud de principios de programación imprescindibles
para un buen desarrollo de aplicaciones. Me quedaría con una frase graciosa.
Imagínate en una entrevista:</p>

<blockquote><p>¿Cuál es tu mayor fortaleza?
Soy vago</p></blockquote>

<h2><a href="http://2015.codemotion.es/agenda.html#5677904553836544/50404003">Technical debt for developers... and managers!</a>, de <a href="https://twitter.com/luiyo">Luis García Castro</a></h2>

<p>Charla completísima acerca del concepto de <a href="/blog/2015/10/12/deuda-tecnica/">deuda técnica</a>. Luis cubrió casi
todos los aspectos relacionados con la deuda técnica (y otras deudas):
metáfora, síntomas, ventajas, inconvenientes, cómo evitarla, cómo pagarla,...</p>

<p>La charla estuvo bastante bien, y muy bien amenizada por Luis. Hubo debate, por
lo que estuvo bastante animada.</p>

<p>Como punto gracioso, Luis expuso una serie de frases que todos hemos dicho u
oido en el trabajo, como por ejemplo:</p>

<blockquote><p>Pon un comentario y lo arreglamos luego</p></blockquote>

<h2><a href="http://2015.codemotion.es/agenda.html#5677904553836544/48514002">Dando amor a los tests</a>, de <a href="https://twitter.com/kinisoftware">Joaquín Engelmo</a></h2>

<p>Esta es la segunda parte de una charla de Kini (creo recordar que se titulaba
«Adicto al verde». Como segunda parte, los conceptos tratados en esta charla
son más avanzados y por las pequeñas preguntas para responder a mano alzada, no
toda la audiencia estaba familiarizada con ellos, por lo que seguro que hubo
mucha gente que aprendió mucho de la charla.</p>

<p>De la charla me llevo la confirmación de una sospecha que tenía: cuantos más
tests tienes y más grande es tu aplicación, más debes tratar a los tests como
código de producción y seguir los mismos principios, de lo contrario, cualquier
pequeño cambio requerirá múltiples cambios en los tests y supondrán más un
lastre que una ayuda.</p>

<h2><a href="http://2015.codemotion.es/agenda.html#5699289732874240/49544011">Del infierno al cielo</a>, de <a href="https://twitter.com/rrequero">Raúl Requero</a></h2>

<p>Para ser una charla a primera hora, Raúl fue valiente y fue directo al grano,
sin rodeos. Prometía ser una charla dura. Y lo fue, pero fue genial. Charla muy
práctica, llena de ejemplos y de código (¡bien!).</p>

<p>La charla se centró en una funcionalidad introducida en ECMAScript 2015, los
generadores. Y Raúl los destripó de arriba a abajo: qué son, cuándo
utilizarlos, cuándo no, librerías que hacen su uso más sencillo (si quieres que
te duela la cabeza busca <a href="https://github.com/thunks/thunks">thunks</a> y <a href="https://github.com/tj/co">co</a>, increíbles).</p>

<h2><a href="http://2015.codemotion.es/agenda.html#5699289732874240/50504009">Coding culture</a>, de <a href="https://twitter.com/svenpet">Sven Peters</a></h2>

<p>Estaba deseando ver esta charla, no me la perdería por nada del mundo. Había
visto algunas charlas grabadas de Sven, y es un ponente con muchas tablas. Unos
gráficos espectaculares y una historia muy depurada. Con giros argumentales
inesperados y con mucho sentido del humor.</p>

<p>Sven presentó distintos conceptos relacionados con la cultura de empresa y
distintas actividades que se realizan en Attlassian. Habló de la cultura de la
innovación, de la felicidad, del balance de la pasión (producto o cliente), de
equipo y cultura que escala.</p>

<p>Si tienes ganas, aquí encontrarás todas las <a href="http://svenpet.com/talks/">charlas de Sven</a>.</p>

<h2><a href="http://2015.codemotion.es/agenda.html#5699289732874240/49534007">Programando en diferido</a>, de <a href="https://twitter.com/flipper83">Jorge Juan Barroso</a></h2>

<p>En un principio no tenía pensado entrar en esta charla, pero no me arrepiento
de nada. Jorge es un ponente increíble, fue una sorpresa muy positiva para mí.
Explicó conceptos muy complejos de una manera muy clara y sencilla. Esta charla
también me sirvió para refrescar un poco mi cada vez más aturdido <em>sentido
Javero</em>, conociendo de mano de un crack conceptos como <em>Streams</em> en Java,
observables (cold y hot), la librería RxJava y el <em>Reactive manifesto</em></p>

<p>De la charla me llevo un consejo que me pareció buenísimo</p>

<blockquote><p>Primero resuelve el problema, luego escribe el código</p></blockquote>

<h2><a href="http://2015.codemotion.es/agenda.html#5699289732874240/45634007">Navegando con el piloto automático con CasperJS</a>, de <a href="https://twitter.com/asanzdiego">Adolfo Sanz</a></h2>

<p>En esta charla Adofo nos presentó CasperJS, que no es una herramienta que corre
en NodeJS, si no que es una herramienta de scripting, y que entre otras cosas
sirve para programar o automatizar tus navegaciones web. Aunque el uso que más
interesó a la gente, a la vista de la cantidad de preguntas al ponente, fue la
posibilidad de escribir y ejecutar tests de aceptación con la herramienta.</p>

<p>Fue un charlas super práctica, toda con código en vivo y con demostraciones.</p>

<h2><a href="http://2015.codemotion.es/agenda.html#5699289732874240/44774010">Help, I need more women!</a>, de <a href="https://twitter.com/Laura_Morillo">Laura Morillo</a>, <a href="https://www.koliseo.com/anafvm">Ana Fernández</a> y <a href="https://www.koliseo.com/mlorenzosanchez">Marina Lorenzo</a></h2>

<p>El título de la charla lo dice todo, el discurso de la misma giró en torno al
hecho de la poca presencia femenina en el campo tecnológico y en el análisis de
sus posibles causas. Una de ellas se atribuye a la escasez de <em>referentes</em>, por
lo cual las niñas (las futuras ingenieras) no tienen quien les inspire y no
eligen carreras científicas o relacionadas con las ingenierías.</p>

<p>Las ponentes hicieron un repaso de las distintas mujeres destacadas en el campo
de la ingeniería de la historia y de cómo los medios de comunicación
representan a las mujeres en este campo, que por cierto, no es muy buena la
imagen que proyectan.</p>

<p>Finalmente, expusieron una serie de iniciativas que se están llevando a cabo a
nivel nacional e internacional, y creo que consiguieron que muchas mujeres
asistentes se interesaran por ellas, así que ¡FELICIDADES!</p>

<h2><a href="http://2015.codemotion.es/agenda.html#5699289732874240/48544008">Taiga, de 0 a 70.000 proyectos</a>, de <a href="https://twitter.com/diacritica">Pablo Ruiz</a></h2>

<p>En esta charla Pablo presentó Taiga, un gestor de proyectos ágiles. Soporta
Scrum y Kanban. Descrito así, parece que fue una charla absolutamente
publicitaria, pero para nada. Por supuesto, Pablo presentó la herramienta. Pero
después dió paso a una serie de peticiones de funcionalidad de los usuarios a
la herramienta y le dió un enfoque muy especial. Mezcló los valores y
principios ágiles con los valores y principios que defienden en Taiga y
justificó el porqué hacen caso, o no, a sus usuarios. Una clase absolutamente
magistral de lo que significa ser ágil y gestionar proyectos ágiles.</p>

<p>Algunas de las funcionalidades pedidas por usuarios <em>ágiles</em> serían: llevar una
cuenta de las horas consumidas, contabilizar historias no terminadas en un
sprint, poder representar personas asignadas a varios proyectos,...</p>

<h2><a href="http://2015.codemotion.es/agenda.html#5699289732874240/43004009">Gente que hace cosas con cacharros</a>, de <a href="https://www.koliseo.com/miguelangellv">Miguel Ángel López</a> y <a href="https://twitter.com/josejuansanchez">Jose Juan Sánchez</a></h2>

<p>Y para terminar, una charla que me sorprendió. Se podría resumir con algo que
dijo Miguel Ángel, que según él es a lo que se dedica en su tiempo libre:</p>

<blockquote><p>Hago cosas que, no sirven para nada, pero molan</p></blockquote>

<p>Así fue la charla. Llena de experimentos de <em>maker</em>, de pequeños inventos
curiosos, imaginativos, que no tenían valor útil, no iban a cambiar el mundo,
pero molaban mil. Fue la charla ideal para terminar dos días a tope. Divertida,
desenfada y llena de imaginación. ¡Qué ganas tengo de usar algo parecido con mi
hijo!</p>

<h2>Trabajo para casa</h2>

<p>Y esto fue más o menos mi Codemotion. Los organizadores del mismo no quieren
que Codemotion termine aquí, quieren que ahora empiece el #codemotion2015. La
idea de continuar es que lo aprendido no se quede en estos dos magníficos días,
si no que los extendamos en el tiempo. Por eso mismo, éstos son los deberes que
me llevo para casa:</p>

<ol>
<li>Conoce tus herramientas: ¿qué tal si empiezo a usar la consola de PhpStorm?</li>
<li>¿Existe alguna forma de cuantificar la deuda técnica?</li>
<li>Buscar acerca del concepto de <em>property-based testing</em>. Ha aparecido por mi
radar últimamente, pero no le he hecho mucho caso. Ha llegado el momento</li>
<li>Attlassian Mood App</li>
<li>¿Podrías encontrar alguna utilidad a CasperJS?</li>
<li>Serie <em>Halt &amp; Catch Fire</em></li>
<li>Proponer PI Week en el trabajo</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Los eventos que vienen]]></title>
    <link href="http://rchavarria.github.io/blog/2015/09/27/eventos-que-vienen/"/>
    <updated>2015-09-27T23:11:00+02:00</updated>
    <id>http://rchavarria.github.io/blog/2015/09/27/eventos-que-vienen</id>
    <content type="html"><![CDATA[<p>Cuando leí el post de <a href="https://twitter.com/voylinux">Pablo Bernardo</a>, <a href="http://voylinux.com/yo-voy-al-gnu-social-camp-2015/">Yo voy al GNU Social Camp 2015</a>, me
sentí inspirado para escribir algo parecido. La recta final del año viene
cargadito de eventos, y les tengo ganas, muchas ganas. Y que mejor manera de ir
calentando motores que hacer como Pablo y escribir sobre dichos eventos.</p>

<p>¿De qué eventos estoy hablando?</p>

<ol>
<li><a href="http://globalday.coderetreat.org/">Global Day of Coderetreat</a>, que se celebrará el 14 de noviembre de 2015, a
nivel mundial.</li>
<li><a href="http://2015.codemotion.es/">Codemotion 2015</a>, allá por el 27 y 28 de noviembre de 2015.</li>
<li><a href="http://cas2015.agile-spain.org/">Conferencia Agile Spain 2015</a>, los días 3 y 4 de diciembre de 2015.</li>
</ol>


<p>La agenda está apretada, ¿eh?</p>

<!-- more -->


<h2>Global Day of Coderetreat</h2>

<blockquote><p>A day to celebrate passion and software craftsmanship</p></blockquote>

<p>El año pasado fue <a href="/blog/2014/11/18/mi-primer-code-retreat/">mi primer Code Retreat</a>, y me encantó la experiencia. Este
año está más difícil, y a estas alturas todavía no tengo claro si podré ir. Si
tú puedes, te lo recomiendo. Lo pasarás bien.</p>

<p>Es un evento a nivel global, estiman que este año lo celebren de 100 a 150
ciudades. ¡Increíble!</p>

<h2>Codemotion</h2>

<blockquote><p>Codemotion gets all the IT communities in Spain together for two days. We
take an entire university building to present the best of each technology and
get you far away from your comfort zone.</p></blockquote>

<p>Este año el Codemotion vuelve a repetirse en la Universidad San Pablo CEU, en
el campus de Boadilla del Monte (Madrid). Ésta es la madre de las conferencias.
El año pasado hubo casi 2000 asistentes. <strong>¡2000!</strong>. Una locura, es
prácticamente imposible no encontrarse con alguien conocido en ella.
<a href="/blog/2014/11/29/notas-codemotion-2014/">El año pasado pude asistir</a>, y este año también espero poder hacerlo.</p>

<p>Es una conferencia donde se involucran muchísimas comunidades locales, donde
acuden ponentes internacionales de muy alto nivel. No solo hay charlas, también
hay talleres, los patrocinadores montan pequeñas fiestas y muchos de ellos
organizan concursos para disfrute de los asistentes.</p>

<p>Si crees que por dos días de conocer a gente interesantísima te va a salir por
un ojo de la cara te equivocas. El Codemotion debe ser uno de los eventos más
accesibles (en cuanto a coste de entrada) de toda España. Por menos de 50€
tienes derecho a poder absorber cuanta información y contactos puedas durante
dos días. A tí no se, pero a mí me parece alucinante.</p>

<h2>Conferencia Agile Spain</h2>

<blockquote><p>Es un evento anual que generan las personas que viven el desarrollo de
productos de software de una manera diferente</p></blockquote>

<p>En el 2012 acudí a esta misma conferencia, cuando se celebró en Cáceres
(<a href="/blog/2012/11/08/mi-experiencia-en-la-cas2012/">la CAS2012 fue toda un experiencia para mí</a>). Quedé tan prendado del ambiente, de
las charlas, de todo en general, que desde entonces he querido asistir a todas
las que se ha celebrado. Otros años me he quedado con las ganas de ir porque se
celebraba lejos de casa y la pereza de organizarme el viaje pudo con las ganas
de asistir. Este año se celebra en Madrid, en el <a href="http://www.circulobellasartes.com/">Círculo de Bellas Artes</a>, así
que este año no hay excusa.</p>

<p>Como muestra de lo genial de la conferencia, existe un
<a href="https://trello.com/chairscas2015">proceso de votación de charlas</a>. Asi que tú mismo participas en el proceso de
creación del evento. Existen distintos tracks, distintas temáticas de las
charlas, para que ningún tema <em>Agile</em> se quede sin representación.</p>

<p>Si participas en el proceso te darás cuenta del nivel de los ponentes. Si echas
un vistazo, seguro que te convence y te apetecerá asistir. Si no, no sé qué más
te puedo contar para que te pases por allí: se celebra en un lugar emblemático,
con ponentes astronómicos, con charlas de temáticas muy variadas y con unos
asistentes inmejorables. ¿A qué esperas?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mis notas sobre Codemotion 2014]]></title>
    <link href="http://rchavarria.github.io/blog/2014/11/29/notas-codemotion-2014/"/>
    <updated>2014-11-29T00:48:00+01:00</updated>
    <id>http://rchavarria.github.io/blog/2014/11/29/notas-codemotion-2014</id>
    <content type="html"><![CDATA[<p>Por tercer año consecutivo asistí al evento Codemotion, "un evento de
desarrolladores para desarrolladores". Me encanta la descripcion del
evento. La verdad es que es una pasada, un evento al que este año acudimos
casi 2000 profesionales del desarrollo sofware, donde unos ponente (incluso
extranjeros) cuentan sus experiencias en la vida real. Impresionante.</p>

<p>Antes de nada me gustaría agradecer a los organizadores del evento, a todos
los voluntarios que nos soportan, a los patrocinadores y no me puedo olvidar
de la Universidad San Pablo CEU, que cedió las instalaciones.
Hay muchas quejas por <em>el intenné</em> sobre ciertos aspectos de la organización:
salas abarrotadas, comida insuficiente,... Creo que tienen razón, pero
también hay que entender que un evento así no es fácil organizarlo. A mí
me ha encantado la cantidad de tiempo disponible entre charla y charla. No
me he perdido ninguna de las charlas a las que quería asistir.</p>

<p><img class="center" src="/images/2014/codemotion.png"></p>

<!-- more -->


<p>Este año he podido disfrutar más de las charlas técnicas que el año pasado,
por lo que he aprendido y conocido multitud de nuevas herramientas,
técnicas e ideas.</p>

<p>Aún así, me he quedado con una espinita clavada. Me hubiera gustado
<em>pasillear</em> algo más, pero no se puede tener todo, o pasillo o charla.
También me hubiera gustado acercarme a más ponentes para darles las gracias
y comentar con ellos las tecnologías o herramientas que expusieron.</p>

<p>Pero no todo está perdido, he conocido a unos cuantos buenos profesionales
más y eso es una parte importante de estos eventos: ver viejos amigos y
hacer nuevos.</p>

<h2>Notas sobre las charlas</h2>

<p>Y a continuación, una transcripción de algunas notas que fuí tomando en
todas las charlas a las que asistí. En la
<a href="2014.codemotion.es/es/agenda.html">agenda del Codemotion</a>
podrás encontrar cada una de las charlas que se impartieron con detalles
del ponente, presentaciones, vídeos,... Para ir aguantando hasta el año
que viene.</p>

<h3>What if everything is awesome, Christian Heilmann</h3>

<p>Opinión de la charla: muy amena, se nota que Christian es un profesional dando
charlas por todo el mundo; muy buena historia, muy bien hilada y cortita, al
grano.</p>

<p>La prensa publicita casos demasiado idílicos.</p>

<p>Los programadores tenemos tendencia a recrear (reinventar la rueda) en lugar de
mejorar (¿porqué si no hay N variantes de frameworks web, por ejemplo?). <strong>Mejora
las cosas que ya existen</strong></p>

<p>No expliques, demuéstralo con código o algo mejor, arregla el bug.</p>

<p>Si tus aplicaciones están dirigidas por datos, duraran mucho tiempo.</p>

<p>Agradece, da feedback, a tus usuarios y a los creadores de tus apps.</p>

<p><strong>Acción</strong>: Echar un vistazo a los recursos de las diapositivas.</p>

<h3>Lean Node.js, Ricardo Borillo</h3>

<p>Opinión: multitud de herramientas, multitud de consejos prácticos. De la charla
salí con alguna idea para poner en práctica inmediatamente.</p>

<p>Ricardo hace incapié en cuatro puntos lean:</p>

<ol>
<li>eficiencia / automatización</li>
<li>no cometer errores</li>
<li>evitar desperdicios</li>
<li>mejora contínua</li>
</ol>


<p>Relativo a la construcción de nuestra aplicación:</p>

<ul>
<li>grung Vs gulp para automatización de tareas</li>
<li>browser sync: inyecta CSS en el navegador sin recargar la página, para evitar
errores y conseguir un desarrollo más rápido.</li>
</ul>


<p>Relativo a testear nuestra aplicación:</p>

<ul>
<li>Solo se puede reducir el numero de errores con tests.</li>
<li>karma, jasmine, karma + virtual box (probar IE en Linux o Mac), protractor</li>
</ul>


<p>Relativo al despliegue:</p>

<ul>
<li>upstart (reinicia servidor en caso de que caiga)</li>
<li>forever (nodejitsu)</li>
<li>fusion passenger, nginx + docker</li>
<li>pm2 (cluster, monitorización, ...)</li>
</ul>


<p>Código y ejemplos en el <a href="https://github.com/borillo/codemotion-2014">repo Codemotion de R. Borillo</a></p>

<h3>Workshop, designing a release pipeline, Jose Luis Soria</h3>

<p>Opinión: el taller me defraudó un poco, porque al final fue más una charla larga
que un taller propiamente dicho. Aunque me llevé algunos consejos e ideas que me
pueden servir en mi día a día.</p>

<p>9 pasos a seguir para diseñar una pipeline de entrega:</p>

<ol>
<li>Definir componentes: nombre, dependencias, deploy target, ...</li>
<li>Identificar subpipelines: 1 solo pipeline o 1 pipeline por componente o 1 pipeline por
equipo</li>
<li>Definir etapas y orquestación
a. cada etapa me tiene que dar feedback, información
b. crecer a lo ancho, no a lo largo (en el flujo, paralelizando etapas)
c. necesito: nombre, meta a conseguir, fuentes, flujo, ...</li>
<li>Definir entornos (no deben estar atados a etapas)</li>
<li>Definir los pasos (partes de cada una de las etapas)</li>
<li>Definir automatizacion y herramientas</li>
<li>Definir modelo ejecucion</li>
<li>Planificar para futuras mejoras: comienza simple y evoluciona</li>
<li>Inspecciona y adáptate (mejora contínua)</li>
</ol>


<p>Recursos:</p>

<ul>
<li>libro Continuous Delivery</li>
<li>Agile testing cuadrant</li>
<li>Herramientas de orquestación: ThoughtWorks Go, MS VS Release Management</li>
</ul>


<h3>Loves always takes care and humility, Chema Alonso</h3>

<p>Opinión: la charla comenzó muy bien, una bonita historia (aunque me perdí la
primera parte el año pasado), va contando conceptos de seguridad,... Hasta que
aparece en pantalla <em>LATCH</em>. A partir de ahí, todo pareció un anuncio, y mi
cerebro desconectó.</p>

<p>La charla cuenta una historia entre una Developar y un Hacker.</p>

<p>Dev: preocupada por la seguridad. Cree que algo está seguro si está bien hecho
(best practices).</p>

<p>Hacker: tiene muchas otras maneras de romper la seguirdad.</p>

<p>Hacker: quiere nuevos metodos aplicando la ciencia: doble factor autenticación, usb con llave,
matrices de numeros, ...</p>

<p>Dev: ve problemas, a cada nuevo método le encuentra una debilidad.</p>

<h3>20 languages in 40 minutes, Alonso Torres</h3>

<p>Opinión: charla muy amena y friki, una pasada. El tono fue muy tranquilizador y
Alonso transmitia confianza. En definitiva, me encantó.</p>

<p>¿programar es un arte? no lo sé, pero sí se que es creativo</p>

<p>Alonso nos quiere dar una razón para cada uno de los lenguajes, porque en charlas
técnicas de 1h intentan venderte de usar su lenguaje. Alotor le sobra con 2 min/lenguaje</p>

<p>OOP Vs Functional</p>

<ul>
<li>scala tiene ambos</li>
<li>haskell</li>
<li>F#</li>
<li>clojure: lenguaje funcional con cierta flexibilidad</li>
</ul>


<p>Estático Vs Dinámico</p>

<ul>
<li>groovy: ambos</li>
<li>python: para aprender dinámico</li>
<li>ruby: favorece implícito (potencia sin control)</li>
<li>php: desarrollo rápido</li>
<li>js: para integración con otros sistemas</li>
</ul>


<p>De sistema, de bajo nivel</p>

<ul>
<li>C: potencia</li>
<li>C++: añade cierta estructura a C</li>
<li>Go: concurrencia</li>
<li>Rust: gestión memoria</li>
</ul>


<p>Lenguajes del sigle XXI</p>

<ul>
<li>ceylon: modularidad</li>
<li>elm: funcional en interactivo (I/O): es un haskell para el navegador</li>
<li>julia: cálculo científico y macros</li>
</ul>


<p>Y para terminar, Piet: cada pixel, con su color, es una instruccion. El
hola mundo con este lenguaje es el más bonito que he visto nunca.</p>

<p>Las slides y los ejemplos de código en el <a href="https://github.com/Alotor/20-languages-demos">repo Codemotion de Alotor</a></p>

<h3>Keynote del segundo día</h3>

<p>Presentación del producto IBM Bluemix, una especie de heroku, Google App Engine,...</p>

<ul>
<li>learn</li>
<li>be fast</li>
<li>avoid the grind</li>
</ul>


<p><strong>Acción</strong>: buscar presentacion para dar con los 3 consejos.</p>

<h3>Teaching programming online, Pamela Fox</h3>

<p>Opinión: no venía muy convencido a la charla, pensaba que trataría de docencia, de
cómo enseñar a programar online. En lugar de eso Pamela destripó el curso que da
sobre ciencia de la programación: herramientas, problemas, diversas actividades, ...</p>

<p>Si quieres que la gente vea tus vídeos, haz que duren menos de 10min</p>

<p>Frameworks y herramientas: Backbone, FB React Vs Angular; js parsers, js hint, js babyhint,...</p>

<p>Si alguna vez creas un sistema de programación online, chequea los bucles infinitos.
Los tendrás que sufrir, seguro.</p>

<p>También, deberás tener herramientas, que mediante diferenciación, sea capaz de
detectar si dos alumnos han copiado. Estos cursos suelen tener miles de alumnos, y
es imposible detectarlas manualmente.</p>

<p>Actividades de las que consta el curso en Kahn Academy:</p>

<ul>
<li>Exercises</li>
<li>Projects: permiten a los alumnos ser más creativos.</li>
<li>Algoritmo de votado para crear una lista de los proyectos más llamativos, y cómo
los alumnos se las ingenian para engañar al sistema.</li>
<li>Spin­offs: o una vuelta de tuerca más a los proyectos.</li>
</ul>


<p>En definitiva:
aprende > practica > crea > comparte > ayuda</p>

<p><a href="https://github.com/Khan/live-editor">Live editor</a> es el proyecto en el que está
trabajando la ponente.</p>

<h3>Analizando y debuggeando tu plataforma, Luis Bosque</h3>

<p>Opinión: esperaba algo diferente de la charla, no sé muy bien el qué, pero algo
diferente. Con todo esto, estuvo muy bien. Multitud de herramientas, multitud de
consejos y muchos ejemplos reales usados en CartoDB.</p>

<p>No valen las sensaciones, debes analizar tu plataforma para saber cómo se comportan
tus usuarios y para saber cómo afectan los cambios que haces.</p>

<p>No hay un manual sobre que medir, pero no hay que medir todo.</p>

<p>Analisis corto plazo: monitoring, alerting.</p>

<p>Analisis medio plazo: buscar patrones de uso, optimizar para su uso. Análisis de casos
especiales te pueden llevar a optimizaciones a incorporar</p>

<p>Stadísticas al usuario:</p>

<ul>
<li>tiempo de sus queries en ejecutarse</li>
<li>número de visualizaciones de su app</li>
<li>widgets más usados</li>
</ul>


<p>Herramientas análisis logs: logstash, fluentd, splunk, syslog</p>

<p>No volverte loco con las métricas, no se puede medir todo, debes decidir qué
precisión quieres (queries de mas de 30seg), definir una politica de retención de
datos (no todas las métricas tienen el mismo ciclo de vida)</p>

<p>Ante todo, ten en cuenta el impacto técnico, es muy, muy grande.</p>

<h3>Lo que la cafeína le hizo a JavaScript, Sergio Arbeo</h3>

<p>Opinión: charla muy divertida y amena, Sergio comunica muy bien y se nota que sabe
de lo que habla. La charla es muy técnica y va de cosas muy sencillas hasta
ciertos problemas que te hacen estrujarte la mente un poco.</p>

<p>CoffeeScript mejor que ES5, CoffeeScript peor que ES6</p>

<p>¿Qué trae ES6?</p>

<ul>
<li>Destructuring, con su operación inversa, funciona con arrays</li>
<li>Modules</li>
<li>let / const</li>
<li>classes</li>
<li>propiedades computadas (ejemplo de código implementando <code>pluck</code></li>
<li>function: sspread operator: convierte varios argumentos en un array</li>
<li>function: sdefault parameters</li>
<li>arrow functions</li>
</ul>


<p><strong>Acción</strong>: Librería ESNext para usar ES6 hoy</p>

<h3>The Google Glass revolution, Alain Regnier, @altolabs, GDG Paris</h3>

<p>Opinión: impresionante por la demo en vivo de las gafas. Me sirvió para
conocer de primera mano las Google Glass y pasar un poco de envidia de
poder cacharrear con un prototipo tecnológico.</p>

<ul>
<li>Multitud de sensores</li>
<li>Organizado en Cards: como si fuera un timeline</li>
<li>Controles: voz, táctil, mover cabeza</li>
<li>Glass Mobile, MyGlass web</li>
<li>Un detalle queno me gustó nada es que parece muy enlazado a tu móvil</li>
</ul>


<p>Programar para GGlass</p>

<ol>
<li>Mirror API: nunca te conectas a tu GGlass
tu server ­> google server ­> tus gafas</li>
<li>GDK: accede a hardware de tu GGlass</li>
<li>WearScript: javascript para wearables</li>
</ol>


<h3>Usando behat para no abusar de F5, Alfonso Machado, GeeksHub</h3>

<p>Opinión: una charla muy práctica, donde Alfonso nos cuenta su experiencia con <code>behat</code> a raiz
de unos problemas que tuvo él. Ejemplos con código y demo en vivo. Muy interesante.</p>

<p>Implementación de Gerkin inspirado en Cucumber</p>

<p>Mink: drivers para emular navegadores con Selenium (java and the like) + acciones predefinidas</p>

<p>Instalacion difícil, mejor con composer</p>

<h3>Scrum bad smells, Juanma Gómez</h3>

<p>Opinión: muy animada, Juanma conecta perfectamente con la gente. Intentó tirar de nosotros,
pero era la última hora y nos resistíamos un poco. Eso sí, a la hora de las preguntas la
gente se extendió bastante. Buena señal.</p>

<p>Patrones en la implantación agile</p>

<ul>
<li>2 trampas: yo ya lo se todo; esto no se puede hacer</li>
<li>Las empresas esperan que no cambien nada</li>
<li>“nosotros hacemos nuestro scrum”</li>
<li>equipo multidisciplinar no es que todos hacemos de todo, no es un hombre orquesta, sino que es
un equipo con perfiles especializados que se complementan</li>
<li>dueño de producto sin capacidad (o experiencia) en la toma de decisiones o de visión estratégica</li>
<li>jefe de proyecto que pasa a scrum master: el rol del SM es complejo porque debe tratar
sobretodo de personas</li>
<li>Iteraciones variables</li>
<li>Definir todo al principio (como en cascada)</li>
<li>Hacer cascadas pequeñas</li>
<li>Control y seguimiento en lugar de responsabilidad y confianza</li>
<li>“yo ya he hecho mi trabajo”</li>
</ul>


<p>Mitos:</p>

<ul>
<li>ser agil es ser rápido</li>
<li>en scrum sólo hay visión a corto plazo: debemos tener una visión a largo plazo</li>
</ul>


<p>Como resumen:</p>

<ul>
<li>1º aprender</li>
<li>siempre hay alcantarillas que abrir, siempre va a salir algo que huele mal</li>
<li>scrum conlleva un cambio cultural</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mi experiencia en el Codemotion 2013]]></title>
    <link href="http://rchavarria.github.io/blog/2013/10/22/mi-experiencia-en-el-codemotion-2013/"/>
    <updated>2013-10-22T12:44:00+02:00</updated>
    <id>http://rchavarria.github.io/blog/2013/10/22/mi-experiencia-en-el-codemotion-2013</id>
    <content type="html"><![CDATA[<p>El pasado viernes 18 de octubre asistí al <a href="http://madrid.codemotionworld.com">Codemotion 2013</a>, un evento de
desarrolladores para desarrolladores. Es solamente la segunda edición en España,
pero la considero una cita imprescindible, y encima se celebra cerca de casa,
así que no puedo pedir más. ¿Quieres un aperitivo? Échale un ojo al <a href="http://www.youtube.com/watch?v=SxP67piQp2U">trailer</a>.</p>

<p>Lamentablemente, por motivos personales no he podido asistir a los dos días,
así que tengo muuuchas charlas para ver en diferido. Pero no perdí el tiempo,
pude conocer en pesona a gente de <a href="http://www.autentia.com">Autentia</a>, <a href="http://www.deiser.com">Deiser</a>, y otros patrocinadores del
evento sin los cuales no habría sido posible: PayPal, Atlassian, Mozilla, Telefónica I+D,
Alfresco y más.</p>

<p><img class="center" src="/images/2013/codemotion.png" title="Codemotion Spain 2013" ></p>

<!-- more -->


<p>El viernes no había muchas charlas ténicas, especialmente por la mañana,
y eran las que más me interesaban, así que no puedo contar gran cosa de las charlas a
las que asistí. Eso sí, me encantó el papel de las <strong>comunidades</strong> en la keynote. Es
una gozada que haya multitud de gente apasionada por el software y que participe
en actividades y comunidades locales. Toda mi admiración para ellos.</p>

<p>En compensación a esta falta de charlas técnicas, disfruté mucho del pasillo y de la visita
a los stands que distintas empresas tenían en los pasillos. Especialmente los
de <a href="http://www.deiser.com">Deiser</a> y <a href="http://www.autentia.com">Autentia</a>. Estoy contento, porque me permitió conocer profesionales
que trabajan en dos empresas que admiro, no sólo por lo que hacen, si no por cómo
lo hacen (y además me hice con un poco de <em>merchandaising</em>).</p>

<p><img class="center" src="/images/2013/codemotion-merchandaising.jpg" title="Codemotion Spain 2013" ></p>

<p>Este año, mi edición del Codemotion ha sido muy ligera. Me da mucha pena, pero
los compromisos son los compromisos, que también los disfruté, por lo que no me
arrepiento de nada.</p>

<p>Así que, mientras voy viendo alguna que otra charla del canal de youtube de
<a href="http://www.youtube.com/channel/UCJ91eUdxXwLYyaeIN1rGg-g">Codemotion Madrid</a>, voy esperando con impaciencia la edición del año que viene, para
reservar agenda y estar a tope.</p>
]]></content>
  </entry>
  
</feed>
